Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2016.03.10 - 21:10:22]

SAT64TEST.asm
Errors: 0

       1   00:0000                      		output "SAT64TEST.rom"
       2   00:0000                      
       3   00:0000                      		defpage	 0,0x4000, 0x2000		; page 0 main code 
       4   00:0000                      		defpage	 1,0x6000, 0x2000		; page 1 
       5   00:0000                      		defpage	 2..7					; swapped data 
       6   00:0000                      	
       7   00:0000                      		;	konami scc
       8   00:0000                      		
       9   00:0000  (00:5000)           _kBank1:	equ 05000h ;- 57FFh (5000h used)
      10   00:0000  (00:7000)           _kBank2: 	equ 07000h ;- 77FFh (7000h used)
      11   00:0000  (00:9000)           _kBank3: 	equ 09000h ;- 97FFh (9000h used)
      12   00:0000  (00:B000)           _kBank4: 	equ 0B000h ;- B7FFh (B000h used)
      13   00:0000                      	
      14   00:0000  (00)                		page 0
      15   00:4000                      		
      16   00:4000                              org 4000h
      17   00:4000                              dw  4241h,START,0,0,0,0,0,0
      17   00:4000  41 42 10 40 00 00 00 00 00 00 00 00 00 00 00 00 
      18   00:4010                      
      19   00:4010  (00:0004)           CGTABL:			equ	0x0004		
      20   00:4010  (00:0040)           MAX_SPRITES:	equ	64		; System flikering
      21   00:4010  (00:3800)           SPRTBL:			equ	0x3800	; Tabla de Sprites
      22   00:4010  (00:1B00)           SPRATR:			equ	0x1B00	; Tabla de los atributos de los sprites
      23   00:4010  (00:5B00)           SATor64:		equ	0x5b00
      24   00:4010                      
      25   00:4010  (00:00D1)           SPR_Y_NODRAW:	equ	209
      26   00:4010                      
      27   00:4010  (00:0000)           SPRITE_Y		equ	0
      28   00:4010  (00:0001)           SPRITE_X		equ	1
      29   00:4010  (00:0002)           SPRITE_INDEX	equ	2
      30   00:4010  (00:0003)           SPRITE_COLOR	equ	3
      31   00:4010                      	
      32   00:4010                      
      33   00:4010                      START:  
      34   00:4010  CD 2B 40            		call	screeninit
      35   00:4013                      		
      36   00:4013  AF                  		xor		a
      37   00:4014  32 01 C1            		ld		[m_iSprDrawFrame],a		
      38   00:4017                      		
      39   00:4017                      				
      40   00:4017  AF                  1:		xor		a
      41   00:4018  32 00 C1            		ld		(ram_count),a
      42   00:401B  CD 9C 40            		call	sat_reset
      43   00:401E                      		
      44   00:401E  CD 4D 40            2:		call	addsprite
      45   00:4021  20 FB               		jr	nz,2b
      46   00:4023                      
      47   00:4023  76                  		halt              
      48   00:4024  CD 89 40            		call	DRAW_SPRITES
      49   00:4027                      
      50   00:4027                      		; ld	e,8
      51   00:4027                      		; call   	checkkbd      
      52   00:4027                      		; and		1
      53   00:4027                      		; call	z,addsprite
      54   00:4027                      				
      55   00:4027  C3 17 40            		jp	1b
      56   00:402A                      		
      57   00:402A  C9                  		ret    
      58   00:402B                      ;-----------------------------------------------------------
      59   00:402B                      		
      60   00:402B                      screeninit:
      61   00:402B  3E 02               		ld		a,2
      62   00:402D  CD 5F 00            		call	005fh		
      63   00:4030  21 00 38            		ld		hl,SPRTBL
      64   00:4033  CD 53 00            		call	0053h		
      65   00:4036                      
      66   00:4036  2A 04 00            		ld		hl,(CGTABL)
      67   00:4039  01 98 00            		ld		bc,098h
      68   00:403C                      [8]		otir
      68   00:403C  ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 ED B3 
      69   00:404C  C9                  		ret
      70   00:404D                      ;-----------------------------------------------------------
      71   00:404D                      
      72   00:404D                      addsprite
      73   00:404D  FD 21 05 C1         		ld	iy,ramdata
      74   00:4051  3A 00 C1            		ld	a,(ram_count)
      75   00:4054  E6 03               		and	00000011b
      76   00:4056  87 87 87 87 87 87   [6]		add	a,a					; x64
      77   00:405C  C6 20               		add	a,32
      78   00:405E  FD 77 01            		ld	(iy+SPRITE_X),a		; x
      79   00:4061                      
      80   00:4061  3A 00 C1            		ld	a,(ram_count)
      81   00:4064  E6 FC               		and	11111100b
      82   00:4066  87                  		add	a,a					; x8
      83   00:4067  FD 77 00            		ld	(iy+SPRITE_Y),a		; y
      84   00:406A                      
      85   00:406A  3A 00 C1            		ld	a,(ram_count)
      86   00:406D  E6 07               		and	7
      87   00:406F  C6 08               		add	a,8
      88   00:4071  FD 77 03            		ld	(iy+SPRITE_COLOR),a		; c
      89   00:4074  FD 36 02 41         		ld	(iy+SPRITE_INDEX),'A'	; sp
      90   00:4078                      
      91   00:4078  FD 21 05 C1         		ld	iy,ramdata
      92   00:407C  CD A7 40            		call	INSERT_SPRITE
      93   00:407F                      		
      94   00:407F  3A 00 C1            		ld	a,(ram_count)
      95   00:4082  3C                  		inc	a
      96   00:4083  E6 3F               		and	63
      97   00:4085  32 00 C1            		ld	(ram_count),a
      98   00:4088  C9                  		ret
      99   00:4089                      
     100   00:4089                      ;-----------------------------------------------------------
     101   00:4089                      ; Draw sprites
     102   00:4089                      ;-----------------------------------------------------------
     103   00:4089                      DRAW_SPRITES:
     104   00:4089                      	;---------------------------------------------------
     105   00:4089                      	; SISTEM FLIKERING----------------------------------
     106   00:4089                      	;---------------------------------------------------
     107   00:4089                      
     108   00:4089  3A 01 C1            	ld	a,[m_iSprDrawFrame]
     109   00:408C  B7                  	or	a
     110   00:408D  CC D2 40            	call	z,WRITESAT			; Note: WRITESAT returns always with Z
     111   00:4090  C4 00 41            	call	nz,revWRITESAT
     112   00:4093                      
     113   00:4093                      	;---------------------------------------------------
     114   00:4093                      	; par-inpar frame run
     115   00:4093                      
     116   00:4093  3A 01 C1            	ld	a,[m_iSprDrawFrame]
     117   00:4096  EE 01               	xor	1
     118   00:4098  32 01 C1            	ld	[m_iSprDrawFrame],a
     119   00:409B                      
     120   00:409B  C9                  	ret
     121   00:409C                      	
     122   00:409C                      sat_reset:
     123   00:409C                      	;---------------------------------------------------
     124   00:409C                      	; reset virtual sat
     125   00:409C  AF                  	xor	a
     126   00:409D  32 02 C1            	ld	[m_iNumSpr],a
     127   00:40A0  21 00 C0            	ld	hl,m_iSprAtr
     128   00:40A3  22 03 C1            	ld	[m_iSprAtrPointer],hl
     129   00:40A6  C9                  	ret
     130   00:40A7                      	;---------------------------------------------------
     131   00:40A7                      
     132   00:40A7                      
     133   00:40A7                      ;-----------------------------------------------------------
     134   00:40A7                      ; Sprite system
     135   00:40A7                      ; IY = position of buffer. The buffer format must be y, x, color, sprite
     136   00:40A7                      ;-----------------------------------------------------------
     137   00:40A7                      INSERT_SPRITE:
     138   00:40A7  2A 03 C1            	ld	hl,[m_iSprAtrPointer]
     139   00:40AA  11 00 40            	ld	de, 0xFFFF & (-m_iSprAtr) 
     140   00:40AD  19                  	add	hl,de
     141   00:40AE  25                  	dec	h					; if hl=64*4 return 
     142   00:40AF  C8                  	ret	z					
     143   00:40B0                      	; set values
     144   00:40B0  2A 03 C1            	ld	hl,[m_iSprAtrPointer]
     145   00:40B3  FD 7E 00            	ld	a,[iy+SPRITE_Y]		; +19c
     146   00:40B6  77                  	ld	[hl],a				; +7c add y data
     147   00:40B7  23                  	inc	hl					; +6c
     148   00:40B8  FD 7E 01            	ld	a,[iy+SPRITE_X]		; +19c
     149   00:40BB  77                  	ld	[hl],a				; +7c add x data
     150   00:40BC  23                  	inc	hl					; +6c
     151   00:40BD  FD 7E 02            	ld	a,[iy+SPRITE_INDEX]	; +19c
     152   00:40C0  77                  	ld	[hl],a				; +7c add color
     153   00:40C1  23                  	inc	hl					; +6c
     154   00:40C2  FD 7E 03            	ld	a,[iy+SPRITE_COLOR]	; +19c
     155   00:40C5  77                  	ld	[hl],a				; +7c add sprite index
     156   00:40C6  23                  	inc	hl					; +6c
     157   00:40C7  22 03 C1            	ld	[m_iSprAtrPointer],hl
     158   00:40CA                      							
     159   00:40CA                      	; increment num sprites index
     160   00:40CA  3A 02 C1            	ld	a,[m_iNumSpr]
     161   00:40CD  3C                  	inc	a
     162   00:40CE  32 02 C1            	ld	[m_iNumSpr],a
     163   00:40D1  C9                  	ret
     164   00:40D2                      	
     165   00:40D2                      ; -------------------
     166   00:40D2                      ; direct write sat
     167   00:40D2                      ; 
     168   00:40D2                      ; -------------------
     169   00:40D2                      WRITESAT:
     170   00:40D2  2A 03 C1            	ld	hl,[m_iSprAtrPointer]
     171   00:40D5  01 00 40            	ld	bc, 0xFFFF & (-m_iSprAtr) 
     172   00:40D8  09                  	add	hl,bc
     173   00:40D9                      	
     174   00:40D9  3E 00               	ld	a,SATor64 & 255
     175   00:40DB  D3 99               	out	[0x99],a
     176   00:40DD  3E 5B               	ld	a,SATor64/256
     177   00:40DF  D3 99               	out	[0x99],a
     178   00:40E1                      
     179   00:40E1  7D                  	ld	a,l
     180   00:40E2  B4                  	or	h
     181   00:40E3  28 16               	jr	z,ws2f
     182   00:40E5                      	
     183   00:40E5  45                  	ld	b,l			;	always safe, as we test for more than 64 sprites in INSERT_SPRITE
     184   00:40E6  3E 80               	ld	a,128
     185   00:40E8  B8                  	cp	b
     186   00:40E9  30 01               	jr	nc,1f
     187   00:40EB  47                  	ld	b,a
     188   00:40EC                      1:
     189   00:40EC                      	
     190   00:40EC  21 00 C0            	ld	hl,m_iSprAtr
     191   00:40EF  0E 98               	ld	c,0x98
     192   00:40F1                      ws1b:
     193   00:40F1                      [4]	outi
     193   00:40F1  ED A3 ED A3 ED A3 ED A3 
     194   00:40F9  20 F6               	jr	nz,ws1b
     195   00:40FB                      			
     196   00:40FB                      ws2f:	
     197   00:40FB  3E D0               	ld	a,208
     198   00:40FD  D3 98               	out	[0x98],a
     199   00:40FF  C9                  	ret 
     200   00:4100                      
     201   00:4100                      			
     202   00:4100                      ; -------------------
     203   00:4100                      ; reverse write sat
     204   00:4100                      ; 
     205   00:4100                      ; -------------------
     206   00:4100                      revWRITESAT:
     207   00:4100  2A 03 C1            	ld	hl,[m_iSprAtrPointer]
     208   00:4103  01 00 40            	ld	bc, 0xFFFF & (-m_iSprAtr) 
     209   00:4106  09                  	add	hl,bc
     210   00:4107                      	
     211   00:4107  3E 00               	ld a,SATor64 & 255
     212   00:4109  D3 99               	out (0x99),a
     213   00:410B  3E 5B               	ld a,SATor64/256
     214   00:410D  D3 99               	out (0x99),a
     215   00:410F                      
     216   00:410F  7D                  	ld	a,l
     217   00:4110  B4                  	or	h
     218   00:4111  28 1E               	jr	z,rw2f
     219   00:4113                      
     220   00:4113  45                  	ld	b,l			;	always safe, as we test for more than 64 sprites in INSERT_SPRITE
     221   00:4114  3E 80               	ld	a,128
     222   00:4116  B8                  	cp	b
     223   00:4117  30 01               	jr	nc,1f
     224   00:4119  47                  	ld	b,a
     225   00:411A                      1:
     226   00:411A                      
     227   00:411A  2A 03 C1            	ld	hl,[m_iSprAtrPointer]
     228   00:411D  11 FC FF            	ld	de,-4
     229   00:4120  19                  	add	hl,de
     230   00:4121  11 F8 FF            	ld	de,-8
     231   00:4124  0E 98               	ld c,0x98
     232   00:4126                      rw1b:
     233   00:4126                      [4]	outi
     233   00:4126  ED A3 ED A3 ED A3 ED A3 
     234   00:412E  19                  	add	hl,de		; it does not affect Z
     235   00:412F  20 F5               	jr	nz,rw1b
     236   00:4131                      
     237   00:4131                      rw2f:
     238   00:4131  3E D0               	ld	a,208
     239   00:4133  D3 98               	out	(0x98),a
     240   00:4135  C9                  	ret 	
     241   00:4136                      
     242   00:4136                      ; // Line Bit_7 Bit_6 Bit_5 Bit_4 Bit_3 Bit_2 Bit_1 Bit_0
     243   00:4136                      ; // 0 	   "7"  "6"   "5"   "4"   "3"   "2"   "1"   "0"
     244   00:4136                      ; // 1 	   ";"  "]"   "["   "\"   "="   "-"   "9"   "8"
     245   00:4136                      ; // 2 	   "B"  "A"   ???   "/"   "."   ","   "'"   "`"
     246   00:4136                      ; // 3 	   "J"  "I"   "H"   "G"   "F"   "E"   "D"   "C"
     247   00:4136                      ; // 4 	   "R"  "Q"   "P"   "O"   "N"   "M"   "L"   "K"
     248   00:4136                      ; // 5 	   "Z"  "Y"   "X"   "W"   "V"   "U"   "T"   "S"
     249   00:4136                      ; // 6 	   F3 	 F2    F1  CODE   CAP  GRAPH  CTRL SHIFT
     250   00:4136                      ; // 7 	   RET  SEL    BS  STOP   TAB   ESC    F5    F4
     251   00:4136                      ; // 8 	   RIGHT DOWN  UP  LEFT   DEL   INS   HOME SPACE
     252   00:4136                      
     253   00:4136                      checkkbd:
     254   00:4136                      		; di
     255   00:4136  DB AA               		in	a,(0aah)
     256   00:4138  E6 F0               		and 011110000B			; upper 4 bits contain info to preserve
     257   00:413A  B3                  		or	e
     258   00:413B  D3 AA               		out (0aah),a
     259   00:413D  DB A9               		in	a,(0a9h)
     260   00:413F  6F                  		ld	l,a
     261   00:4140                      		; ei
     262   00:4140  C9                  		ret
     263   00:4141                      
     264   00:4141  (C000)              	map 0xc000
     265   00:4141                      	
     266   00:4141                      	; SPRITE MACHINE
     267   00:4141  (00:C000)           m_iSprAtr:			#(MAX_SPRITES*4)		; Sprite system buffers
     268   00:4141                      
     269   00:4141  (00:C100)           ram_count:			#1
     270   00:4141                      	
     271   00:4141  (00:C101)           m_iSprDrawFrame:	#1
     272   00:4141  (00:C102)           m_iNumSpr:			#1
     273   00:4141  (00:C103)           m_iSprAtrPointer:	#2
     274   00:4141                      
     275   00:4141                      
     276   00:4141  (00:C105)           ramdata:			#4
     277   00:4141  (0000)              	endmap

    LABELS
-------------------------------------------------
00:00005000 X _kBank1
00:00007000 X _kBank2
00:00009000 X _kBank3
00:0000B000 X _kBank4
00:00000004   CGTABL
00:00000040   MAX_SPRITES
00:00003800   SPRTBL
00:00001B00 X SPRATR
00:00005B00   SATor64
00:000000D1 X SPR_Y_NODRAW
00:00000000   SPRITE_Y
00:00000001   SPRITE_X
00:00000002   SPRITE_INDEX
00:00000003   SPRITE_COLOR
00:00004010   START
00:0000402B   screeninit
00:0000404D   addsprite
00:00004089   DRAW_SPRITES
00:0000409C   sat_reset
00:000040A7   INSERT_SPRITE
00:000040D2   WRITESAT
00:000040F1   ws1b
00:000040FB   ws2f
00:00004100   revWRITESAT
00:00004126   rw1b
00:00004131   rw2f
00:00004136 X checkkbd
00:0000C000   m_iSprAtr
00:0000C100   ram_count
00:0000C101   m_iSprDrawFrame
00:0000C102   m_iNumSpr
00:0000C103   m_iSprAtrPointer
00:0000C105   ramdata


 Output: SAT64TEST.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: SAT64TEST.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 00000141

   Address   Length Align   Label
   00004000     321         START
   00004141    7871       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 03
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 04
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 05
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 06
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 07
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>
