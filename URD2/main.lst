Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2016.01.21 - 23:53:16]

main.asm
Errors: 0

       1   00:0000                      ;----------------------------------------------------------------------------
       2   00:0000                      ;
       3   00:0000                      ;----------------------------------------------------------------------------
       4   00:0000                      
       5   00:0000                              output "urd2.rom"
       6   00:0000                      
       7   00:0000                      		;	konami scc
       8   00:0000                      		
       9   00:0000  (00:5000)           _kBank1:	equ 05000h ;- 57FFh (5000h used)
      10   00:0000  (00:7000)           _kBank2: 	equ 07000h ;- 77FFh (7000h used)
      11   00:0000  (00:9000)           _kBank3: 	equ 09000h ;- 97FFh (9000h used)
      12   00:0000  (00:B000)           _kBank4: 	equ 0B000h ;- B7FFh (B000h used)
      13   00:0000                      
      14   00:0000                      
      15   00:0000                      
      16   00:0000                      		defpage	 0,0x4000, 0x2000		; page 0 main code 
      17   00:0000                      		defpage	 1,0x6000, 0x2000		; page 1 code 
      18   00:0000                      		defpage	 2,0x8000, 0x2000		; page 2 code  
      19   00:0000                      		defpage	 3,0xA000, 0x2000		; swapped data 
      20   00:0000                      		
      21   00:0000                      		defpage	 4..15					; 64KB of swapped data 
      22   00:0000                      
      23   00:0000                      
      24   00:0000                      
      25   00:0000                        		include "header.asm"			; only definitions
       1.  00:0000                      
       2.  00:0000                        // MSX 1 
       3.  00:0000  (00:F3DF)           RG0SAV  equ 0xF3DF  
       4.  00:0000  (00:F3E0)           RG1SAV  equ 0xF3E0  
       5.  00:0000  (00:F3E1)           RG2SAV  equ 0xF3E1
       6.  00:0000  (00:F3E2)           RG3SAV  equ 0xF3E2
       7.  00:0000  (00:F3E3)           RG4SAV  equ 0xF3E3
       8.  00:0000  (00:F3E4)           RG5SAV  equ 0xF3E4
       9.  00:0000  (00:F3E5)           RG6SAV  equ 0xF3E5
      10.  00:0000  (00:F3E6)           RG7SAV  equ 0xF3E6
      11.  00:0000                      // MSX 2
      12.  00:0000  (00:FFE7)           RG8SAV  equ 0xFFE7 
      13.  00:0000  (00:FFE8)           RG9SAV  equ 0xFFE8 
      14.  00:0000  (00:FFE9)           RG10SAV equ 0xFFE9 
      15.  00:0000  (00:FFEA)           RG11SAV equ 0xFFEA 
      16.  00:0000  (00:FFEB)           RG12SAV equ 0xFFEB 
      17.  00:0000  (00:FFEC)           RG13SAV equ 0xFFEC 
      18.  00:0000  (00:FFED)           RG14SAV equ 0xFFED 
      19.  00:0000  (00:FFEE)           RG15SAV equ 0xFFEE 
      20.  00:0000  (00:FFEF)           RG16SAV equ 0xFFEF 
      21.  00:0000  (00:FFF0)           RG17SAV equ 0xFFF0 
      22.  00:0000  (00:FFF1)           RG18SAV equ 0xFFF1 
      23.  00:0000  (00:FFF2)           RG19SAV equ 0xFFF2 
      24.  00:0000  (00:FFF3)           RG20SAV equ 0xFFF3 
      25.  00:0000  (00:FFF4)           RG21SAV equ 0xFFF4 
      26.  00:0000  (00:FFF5)           RG22SAV equ 0xFFF5 
      27.  00:0000  (00:FFF7)           RG23SAV equ 0xFFF7 
      28.  00:0000                      
      29.  00:0000  (00:FC9E)           _jiffy: equ 0xFC9E 
      30.  00:0000                      
      31.  00:0000                      	
      32.  00:0000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      33.  00:0000                      
      34.  00:0000  (00:000C)           max_enem:					equ 12		; max 12
      35.  00:0000  (00:0003)           max_enem_bullets:			equ 3
      36.  00:0000  (00:0002)           max_bullets:				equ 2		; max number of enemies*2 + ms_bullets + enem_bullets + 3 for ms	<= 32 sprites
      37.  00:0000                      
      38.  00:0000  (00:0004)           maxspeed:					equ 4		; the actual speed is divided by 4
      39.  00:0000  (00:00B4)           assault_wave_timer_preset:	equ	3*60	; a wave each 3 seconds
      40.  00:0000  (00:0002)           enemy_bullet_speed:			equ	2	
      41.  00:0000  (00:0078)           xship_rel:					equ (128-8)
      42.  00:0000                      
      43.  00:0000  (00:0100)           mapWidth	equ	256
      44.  00:0000  (00:000A)           mapHeight	equ	10
      45.  00:0000  (00:00A0)           YSIZE		equ	10*16
      46.  00:0000                      
      47.  00:0000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      48.  00:0000                      
      49.  00:0000                      
      50.  00:0000                      	macro setpage_a
      51.  00:0000                    < 		ld	(_kBank3),a
      52.  00:0000                    < 		inc	a
      53.  00:0000                    < 		ld	(_kBank4),a
      54.  00:0000                    < 	endmacro
      55.  00:0000                      	
      56.  00:0000                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
      26   00:0000                      		
      27   00:0000                      		
      28   00:0000                      		
      29   00:0000  (00)                		page 0
      30   00:4000                      		
      31   00:4000                              org 4000h
      32   00:4000                              dw  4241h,START,0,0,0,0,0,0
      32   00:4000  41 42 8E 46 00 00 00 00 00 00 00 00 00 00 00 00 
      33   00:4010                      
      34   00:4010                      	;-------------------------------------		
      35   00:4010                      
      36   00:4010                      
      37   00:4010                      		include rominit64.asm				
       1.  00:4010                      
       2.  00:4010                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
       3.  00:4010                      ; set pages and subslot
       4.  00:4010                      ;
       5.  00:4010                      
       6.  00:4010                      
       7.  00:4010  (00:0024)           ENASLT:			equ		024h
       8.  00:4010  (00:0138)           RSLREG:			equ		0138h
       9.  00:4010  (00:FCC1)           EXPTBL:			equ		0FCC1h	; Bios Slot / Expansion Slot
      10.  00:4010                      
      11.  00:4010                      
      12.  00:4010                      ; ----------------------------
      13.  00:4010                      ; pre-set main slot for page 3
      14.  00:4010                      ; and set sub-slot for page 3
      15.  00:4010                      ; ----------------------------
      16.  00:4010                      	macro	mainslot_setup n
      17.  00:4010                    < 	and		3
      18.  00:4010                    < [2]	rrca
      19.  00:4010                    < 	and		0xC0
      20.  00:4010                    < 	ld		c,a
      21.  00:4010                    < 	ld		a,d
      22.  00:4010                    < 	and		0x3F
      23.  00:4010                    < 	or		c
      24.  00:4010                    < 	ld		c,a					; Primary slot value with main slot in page 3
      25.  00:4010                    < 
      26.  00:4010                    < 	ld		a,b
      27.  00:4010                    < 	and		0x0C
      28.  00:4010                    < [2]	rrca
      29.  00:4010                    < 	and		3
      30.  00:4010                    < 	ld		b,a					; B = Expanded slot in page 3
      31.  00:4010                    < 	ld		a,c
      32.  00:4010                    < 	out		(0A8h),a			; Slot : Main Slot, xx, xx, Main slot
      33.  00:4010                    < 	ld		a,(0FFFFh)
      34.  00:4010                    < 	cpl
      35.  00:4010                    < 	if (n<=4)
      36.  00:4010                    < [n]	RLCA
      37.  00:4010                    < 	else
      38.  00:4010                    < [8-n] RRCA	
      39.  00:4010                    < 	endif
      40.  00:4010                    < 	and		0xFC
      41.  00:4010                    < 	or		b
      42.  00:4010                    < 	if (n<=4)
      43.  00:4010                    < [n]	RRCA
      44.  00:4010                    < 	else
      45.  00:4010                    < [8-n] RLCA
      46.  00:4010                    < 	endif
      47.  00:4010                    < 	ld		(0FFFFh),a		; Expanded slot selected
      48.  00:4010                    < 	ld		b,a				; save for later	
      49.  00:4010                    < 	endmacro
      50.  00:4010                      		
      51.  00:4010                      
      52.  00:4010                      ; ------------------------------
      53.  00:4010                      ; SEARCH_SLOT
      54.  00:4010                      ; look for the slot of our rom
      55.  00:4010                      ; active in page 1
      56.  00:4010                      ; ------------------------------
      57.  00:4010                      
      58.  00:4010                      search_slot:
      59.  00:4010  CD 38 01            	call	RSLREG
      60.  00:4013  0F 0F               [2]	rrca
      61.  00:4015  E6 03               	and		3
      62.  00:4017  4F                  	ld		c,a
      63.  00:4018  06 00               	ld		b,0
      64.  00:401A  21 C1 FC            	ld		hl,EXPTBL
      65.  00:401D  09                  	add		hl,bc
      66.  00:401E  7E                  	ld		a,(hl)
      67.  00:401F  E6 80               	and		080h
      68.  00:4021  B1                  	or		c
      69.  00:4022  4F                  	ld		c,a
      70.  00:4023  23 23 23 23         [4]	inc		hl
      71.  00:4027  7E                  	ld		a,(hl)
      72.  00:4028  E6 0C               	and		0Ch
      73.  00:402A  B1                  	or		c
      74.  00:402B  32 00 CA            	ld		(slotvar),a
      75.  00:402E  C9                  	ret
      76.  00:402F                      	
      77.  00:402F                      ; ------------------------------
      78.  00:402F                      ; look for the slot of ram
      79.  00:402F                      ; active in page 3
      80.  00:402F                      ; ------------------------------
      81.  00:402F                      
      82.  00:402F                      search_slotram:
      83.  00:402F  F3                  	di
      84.  00:4030  CD 38 01            	call	RSLREG
      85.  00:4033  07 07               [2]	rlca
      86.  00:4035  E6 03               	and		3
      87.  00:4037  4F                  	ld		c,a
      88.  00:4038  06 00               	ld		b,0
      89.  00:403A  21 C1 FC            	ld		hl,EXPTBL
      90.  00:403D  09                  	add		hl,bc
      91.  00:403E  7E                  	ld		a,(hl)
      92.  00:403F  E6 80               	and		080h
      93.  00:4041  28 0D               	jr		z,search_slotram0
      94.  00:4043  B1                  	or		c
      95.  00:4044  4F                  	ld		c,a
      96.  00:4045  23 23 23 23         [4]	inc		hl
      97.  00:4049  7E                  	ld		a,(hl)
      98.  00:404A  07 07 07 07         [4]	rlca
      99.  00:404E  E6 0C               	and		0Ch
     100.  00:4050                      search_slotram0:
     101.  00:4050  B1                  	or		c
     102.  00:4051  32 01 CA            	ld		(slotram),a
     103.  00:4054  C9                  	ret
     104.  00:4055                      	
     105.  00:4055                      ; ------------------------------
     106.  00:4055                      ; SETROMPAGE0
     107.  00:4055                      ; Set the chart in
     108.  00:4055                      ; Page 0
     109.  00:4055                      ; -----------------------------
     110.  00:4055                      
     111.  00:4055                      setrompage0:
     112.  00:4055  3A 00 CA            	ld		a,(slotvar)
     113.  00:4058  C3 7C 40            	jp		setslotpage0
     114.  00:405B                      
     115.  00:405B                      setrampage0:
     116.  00:405B  3A 01 CA            	ld		a,(slotram)
     117.  00:405E  C3 7C 40            	jp		setslotpage0
     118.  00:4061                      
     119.  00:4061                      setrompage2:
     120.  00:4061  3A 00 CA            	ld		a,(slotvar)
     121.  00:4064  C3 F2 40            	jp		setslotpage2
     122.  00:4067                      
     123.  00:4067                      setrampage2:
     124.  00:4067  3A 01 CA            	ld		a,(slotram)
     125.  00:406A  C3 F2 40            	jp		setslotpage2
     126.  00:406D                      	
     127.  00:406D                      setrompage3:
     128.  00:406D  3A 00 CA            	ld		a,(slotvar)
     129.  00:4070  C3 39 41            	jp		setslotpage3
     130.  00:4073                      
     131.  00:4073                      setrampage3:
     132.  00:4073  3A 01 CA            	ld		a,(slotram)
     133.  00:4076  C3 39 41            	jp		setslotpage3
     134.  00:4079                      	
     135.  00:4079                      ; ------------------------------
     136.  00:4079                      ; RECBIOS
     137.  00:4079                      ; set the bios ROM
     138.  00:4079                      ; -------------------------------
     139.  00:4079                      recbios:
     140.  00:4079  3A C1 FC            	ld		a,(EXPTBL)
     141.  00:407C                      
     142.  00:407C                      ; ---------------------------
     143.  00:407C                      ; SETSLOTPAGE0
     144.  00:407C                      ; Set the slot passed in A
     145.  00:407C                      ; at page 0 in the Z80 address space
     146.  00:407C                      ; A: Format FxxxSSPP
     147.  00:407C                      ; ----------------------------
     148.  00:407C                      
     149.  00:407C                      setslotpage0:
     150.  00:407C  F3                  	di
     151.  00:407D  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     152.  00:407E  DB A8               	in		a,(0A8h)
     153.  00:4080  E6 FC               	and		0xFC
     154.  00:4082  57                  	ld		d,a					; D = Primary slot value
     155.  00:4083  78                  	ld		a,b
     156.  00:4084  E6 03               	and		3
     157.  00:4086  B2                  	or		d
     158.  00:4087  57                  	ld		d,a		; D = Final Value for primary slot
     159.  00:4088  78                  	ld		a,b		; Check if expanded
     160.  00:4089  CB 7F               	bit		7,a
     161.  00:408B  28 22               	jr		z,1f	; Not Expanded
     162.  00:408D                      	mainslot_setup	0
     162.  00:408D  E6 03             >  and  3
     162.  00:408F  0F 0F             > [2] rrca
     162.  00:4091  E6 C0             >  and  0xC0
     162.  00:4093  4F                >  ld  c,a
     162.  00:4094  7A                >  ld  a,d
     162.  00:4095  E6 3F             >  and  0x3F
     162.  00:4097  B1                >  or  c
     162.  00:4098  4F                >  ld  c,a
     162.  00:4099                    > 
     162.  00:4099  78                >  ld  a,b
     162.  00:409A  E6 0C             >  and  0x0C
     162.  00:409C  0F 0F             > [2] rrca
     162.  00:409E  E6 03             >  and  3
     162.  00:40A0  47                >  ld  b,a
     162.  00:40A1  79                >  ld  a,c
     162.  00:40A2  D3 A8             >  out  (0A8h),a
     162.  00:40A4  3A FF FF          >  ld  a,(0FFFFh)
     162.  00:40A7  2F                >  cpl
     162.  00:40A8                    >  if (n<=4)
     162.  00:40A8                    > [n] RLCA
     162.  00:40A8                    >  else
     162.  00:40A8                    ~ [8-n] RRCA
     162.  00:40A8                    ~  endif
     162.  00:40A8  E6 FC             >  and  0xFC
     162.  00:40AA  B0                >  or  b
     162.  00:40AB                    >  if (n<=4)
     162.  00:40AB                    > [n] RRCA
     162.  00:40AB                    >  else
     162.  00:40AB                    ~ [8-n] RLCA
     162.  00:40AB                    ~  endif
     162.  00:40AB  32 FF FF          >  ld  (0FFFFh),a
     162.  00:40AE  47                >  ld  b,a
     163.  00:40AF  7A                  1:	ld		a,d				; A = Final value
     164.  00:40B0  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     165.  00:40B2  C9                  	ret
     166.  00:40B3                      
     167.  00:40B3                      ; ---------------------------
     168.  00:40B3                      ; SETSLOTPAGE1
     169.  00:40B3                      ; Set the slot passed in A
     170.  00:40B3                      ; at page 1 in the Z80 address space
     171.  00:40B3                      ; A: Format FxxxSSPP
     172.  00:40B3                      ; ----------------------------
     173.  00:40B3                      
     174.  00:40B3                      setslotpage1:
     175.  00:40B3  F3                  	di
     176.  00:40B4  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     177.  00:40B5  DB A8               	in		a,(0A8h)
     178.  00:40B7  0F 0F               [2]	RRCA
     179.  00:40B9  E6 FC               	and		0xFC
     180.  00:40BB  57                  	ld		d,a					; D = Primary slot value
     181.  00:40BC  78                  	ld		a,b
     182.  00:40BD  E6 03               	and		3
     183.  00:40BF  B2                  	or		d
     184.  00:40C0  07 07               [2]	RLCA
     185.  00:40C2  57                  	ld		d,a		; D = Final Value for primary slot
     186.  00:40C3  78                  	ld		a,b		; Check if expanded
     187.  00:40C4  CB 7F               	bit		7,a
     188.  00:40C6  28 26               	jr		z,1f	; Not Expanded
     189.  00:40C8                      	mainslot_setup	6
     189.  00:40C8  E6 03             >  and  3
     189.  00:40CA  0F 0F             > [2] rrca
     189.  00:40CC  E6 C0             >  and  0xC0
     189.  00:40CE  4F                >  ld  c,a
     189.  00:40CF  7A                >  ld  a,d
     189.  00:40D0  E6 3F             >  and  0x3F
     189.  00:40D2  B1                >  or  c
     189.  00:40D3  4F                >  ld  c,a
     189.  00:40D4                    > 
     189.  00:40D4  78                >  ld  a,b
     189.  00:40D5  E6 0C             >  and  0x0C
     189.  00:40D7  0F 0F             > [2] rrca
     189.  00:40D9  E6 03             >  and  3
     189.  00:40DB  47                >  ld  b,a
     189.  00:40DC  79                >  ld  a,c
     189.  00:40DD  D3 A8             >  out  (0A8h),a
     189.  00:40DF  3A FF FF          >  ld  a,(0FFFFh)
     189.  00:40E2  2F                >  cpl
     189.  00:40E3                    >  if (n<=4)
     189.  00:40E3                    ~ [n] RLCA
     189.  00:40E3                    ~  else
     189.  00:40E3  0F 0F             > [8-n] RRCA
     189.  00:40E5                    >  endif
     189.  00:40E5  E6 FC             >  and  0xFC
     189.  00:40E7  B0                >  or  b
     189.  00:40E8                    >  if (n<=4)
     189.  00:40E8                    ~ [n] RRCA
     189.  00:40E8                    ~  else
     189.  00:40E8  07 07             > [8-n] RLCA
     189.  00:40EA                    >  endif
     189.  00:40EA  32 FF FF          >  ld  (0FFFFh),a
     189.  00:40ED  47                >  ld  b,a
     190.  00:40EE  7A                  1:	ld		a,d				; A = Final value
     191.  00:40EF  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     192.  00:40F1  C9                  	ret
     193.  00:40F2                      	
     194.  00:40F2                      
     195.  00:40F2                      ; ---------------------------
     196.  00:40F2                      ; SETSLOTPAGE2
     197.  00:40F2                      ; Set the slot passed in A
     198.  00:40F2                      ; at page 2 in the Z80 address space
     199.  00:40F2                      ; A: Format FxxxSSPP
     200.  00:40F2                      ; ----------------------------
     201.  00:40F2                      
     202.  00:40F2                      setslotpage2:
     203.  00:40F2  F3                  	di
     204.  00:40F3  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     205.  00:40F4  DB A8               	in		a,(0A8h)
     206.  00:40F6  07 07 07 07         [4]	RLCA
     207.  00:40FA  E6 FC               	and		0xFC
     208.  00:40FC  57                  	ld		d,a					; D = Primary slot value
     209.  00:40FD  78                  	ld		a,b
     210.  00:40FE  E6 03               	and		3
     211.  00:4100  B2                  	or		d
     212.  00:4101  0F 0F 0F 0F         [4]	RRCA
     213.  00:4105  57                  	ld		d,a		; D = Final Value for primary slot
     214.  00:4106  78                  	ld		a,b		; Check if expanded
     215.  00:4107  CB 7F               	bit		7,a
     216.  00:4109  28 2A               	jr		z,1f	; Not Expanded
     217.  00:410B                      	mainslot_setup	4
     217.  00:410B  E6 03             >  and  3
     217.  00:410D  0F 0F             > [2] rrca
     217.  00:410F  E6 C0             >  and  0xC0
     217.  00:4111  4F                >  ld  c,a
     217.  00:4112  7A                >  ld  a,d
     217.  00:4113  E6 3F             >  and  0x3F
     217.  00:4115  B1                >  or  c
     217.  00:4116  4F                >  ld  c,a
     217.  00:4117                    > 
     217.  00:4117  78                >  ld  a,b
     217.  00:4118  E6 0C             >  and  0x0C
     217.  00:411A  0F 0F             > [2] rrca
     217.  00:411C  E6 03             >  and  3
     217.  00:411E  47                >  ld  b,a
     217.  00:411F  79                >  ld  a,c
     217.  00:4120  D3 A8             >  out  (0A8h),a
     217.  00:4122  3A FF FF          >  ld  a,(0FFFFh)
     217.  00:4125  2F                >  cpl
     217.  00:4126                    >  if (n<=4)
     217.  00:4126  07 07 07 07       > [n] RLCA
     217.  00:412A                    >  else
     217.  00:412A                    ~ [8-n] RRCA
     217.  00:412A                    ~  endif
     217.  00:412A  E6 FC             >  and  0xFC
     217.  00:412C  B0                >  or  b
     217.  00:412D                    >  if (n<=4)
     217.  00:412D  0F 0F 0F 0F       > [n] RRCA
     217.  00:4131                    >  else
     217.  00:4131                    ~ [8-n] RLCA
     217.  00:4131                    ~  endif
     217.  00:4131  32 FF FF          >  ld  (0FFFFh),a
     217.  00:4134  47                >  ld  b,a
     218.  00:4135  7A                  1:	ld		a,d				; A = Final value
     219.  00:4136  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     220.  00:4138  C9                  	ret
     221.  00:4139                      	
     222.  00:4139                      ; ---------------------------
     223.  00:4139                      ; SETSLOTPAGE3
     224.  00:4139                      ; Set the slot passed in A
     225.  00:4139                      ; at page 3 in the Z80 address space
     226.  00:4139                      ; A: Format FxxxSSPP
     227.  00:4139                      ; ----------------------------
     228.  00:4139                      	
     229.  00:4139                      setslotpage3:
     230.  00:4139  F3                  	di
     231.  00:413A  47                  	ld		b,a					; B = Slot param in FxxxSSPP format
     232.  00:413B  DB A8               	in		a,(0A8h)
     233.  00:413D  07 07               [2]	RLCA
     234.  00:413F  E6 FC               	and		0xFC
     235.  00:4141  57                  	ld		d,a					; D = Primary slot value
     236.  00:4142  78                  	ld		a,b
     237.  00:4143  E6 03               	and		3
     238.  00:4145  B2                  	or		d
     239.  00:4146  0F 0F               [2]	RRCA	
     240.  00:4148  57                  	ld		d,a		; D = Final Value for primary slot
     241.  00:4149  78                  	ld		a,b		; Check if expanded
     242.  00:414A  CB 7F               	bit		7,a
     243.  00:414C  28 26               	jr		z,1f	; Not Expanded
     244.  00:414E                      	mainslot_setup	2
     244.  00:414E  E6 03             >  and  3
     244.  00:4150  0F 0F             > [2] rrca
     244.  00:4152  E6 C0             >  and  0xC0
     244.  00:4154  4F                >  ld  c,a
     244.  00:4155  7A                >  ld  a,d
     244.  00:4156  E6 3F             >  and  0x3F
     244.  00:4158  B1                >  or  c
     244.  00:4159  4F                >  ld  c,a
     244.  00:415A                    > 
     244.  00:415A  78                >  ld  a,b
     244.  00:415B  E6 0C             >  and  0x0C
     244.  00:415D  0F 0F             > [2] rrca
     244.  00:415F  E6 03             >  and  3
     244.  00:4161  47                >  ld  b,a
     244.  00:4162  79                >  ld  a,c
     244.  00:4163  D3 A8             >  out  (0A8h),a
     244.  00:4165  3A FF FF          >  ld  a,(0FFFFh)
     244.  00:4168  2F                >  cpl
     244.  00:4169                    >  if (n<=4)
     244.  00:4169  07 07             > [n] RLCA
     244.  00:416B                    >  else
     244.  00:416B                    ~ [8-n] RRCA
     244.  00:416B                    ~  endif
     244.  00:416B  E6 FC             >  and  0xFC
     244.  00:416D  B0                >  or  b
     244.  00:416E                    >  if (n<=4)
     244.  00:416E  0F 0F             > [n] RRCA
     244.  00:4170                    >  else
     244.  00:4170                    ~ [8-n] RLCA
     244.  00:4170                    ~  endif
     244.  00:4170  32 FF FF          >  ld  (0FFFFh),a
     244.  00:4173  47                >  ld  b,a
     245.  00:4174  7A                  1:	ld		a,d				; A = Final value
     246.  00:4175  D3 A8               	out		(0A8h),a		; Slot Final. Ram, rom c, rom c, Main
     247.  00:4177  C9                  	ret
     248.  00:4178                      
     249.  00:4178                      	
      38   00:4178                      		include vdpio.asm
       1.  00:4178                      
       2.  00:4178                             
       3.  00:4178                      ;-------------------------------------
       4.  00:4178                      _cls:		
       5.  00:4178  0E 00               		ld		c,0
       6.  00:417A  51                  		ld		d,c
       7.  00:417B  59                  		ld		e,c
       8.  00:417C  F3                  		di
       9.  00:417D  CD C5 41            		call	_vdpsetvramwr
      10.  00:4180  41                  		ld		b,c
      11.  00:4181  1E 01               		ld		e,1
      12.  00:4183  AF                  		xor		a
      13.  00:4184  D3 98               1:		out		(0x98),a
      14.  00:4186  ED A1               		cpi
      15.  00:4188  EA 84 41            		jp   		pe,1b
      16.  00:418B  1D                  		dec	e
      17.  00:418C  C2 84 41            		jp		nz,1b
      18.  00:418F  C9                  		ret
      19.  00:4190                      		
      20.  00:4190                      _cls0:
      21.  00:4190  0E 00               		ld		c,0
      22.  00:4192  51                  		ld		d,c
      23.  00:4193  59                  		ld		e,c
      24.  00:4194  F3                  		di
      25.  00:4195  CD C5 41            		call	_vdpsetvramwr
      26.  00:4198  FB                  		ei
      27.  00:4199  01 00 A0            		ld		bc,mapHeight*16*256
      28.  00:419C  AF                  		xor		a
      29.  00:419D  D3 98               1:		out		(0x98),a
      30.  00:419F  ED A1                       cpi
      31.  00:41A1  EA 9D 41                    jp   	pe,1b
      32.  00:41A4  C9                  		ret
      33.  00:41A5                      		
      34.  00:41A5                      font_cpy:		
      35.  00:41A5  0E 01               		ld		c,1
      36.  00:41A7  11 00 A0            		ld		de,160*256
      37.  00:41AA  CD C5 41            		call	_vdpsetvramwr
      38.  00:41AD  21 00 A0            		ld		hl,fonts
      39.  00:41B0  3E 0D               		ld		a,:fonts
      40.  00:41B2  16 03               		ld		d,3
      41.  00:41B4  32 00 B0            2:		ld		(_kBank4),a
      42.  00:41B7  01 98 00            		ld		bc,0x98
      43.  00:41BA  1E 20               		ld		e,32
      44.  00:41BC  ED B3               1:		otir
      45.  00:41BE  1D                  		dec	e
      46.  00:41BF  20 FB               		jr	nz,1b
      47.  00:41C1  15                  		dec	d
      48.  00:41C2  20 F0               		jr	nz,2b
      49.  00:41C4  C9                  		ret
      50.  00:41C5                      		
      51.  00:41C5                      ;-------------------------------------
      52.  00:41C5                      		
      53.  00:41C5  (00:0099)           vdpport1 equ 0x99
      54.  00:41C5  (00:009A)           vdpport2 equ 0x9A
      55.  00:41C5                      
      56.  00:41C5                      ; levelcolors:
      57.  00:41C5                      	;  incbin "palette.bin"
      58.  00:41C5                      
      59.  00:41C5                      ; _SetPalet:   
      60.  00:41C5                      		; di
      61.  00:41C5                      		; xor a 			;Set pointer to zero.
      62.  00:41C5                      		; out (vdpport1),a        
      63.  00:41C5                      		; ld  a,16 | 010000000B
      64.  00:41C5                      		; out (vdpport1),a
      65.  00:41C5                      
      66.  00:41C5                      		; ld  hl,levelcolors
      67.  00:41C5                      		; ld bc,vdpport2+32*256
      68.  00:41C5                      		; otir
      69.  00:41C5                      		; ei
      70.  00:41C5                      		; ret
      71.  00:41C5                      
      72.  00:41C5                      ;Set VDP for writing at address CDE (17-bit) 
      73.  00:41C5                      
      74.  00:41C5                      _vdpsetvramwr:
      75.  00:41C5  79                  		ld a,c
      76.  00:41C6                      _vdpsetvramwr2:
      77.  00:41C6                      ;Set VDP for writing at address ADE (17-bit) ;
      78.  00:41C6  CB 02               		rlc d
      79.  00:41C8  17                  		rla
      80.  00:41C9  CB 02               		rlc d
      81.  00:41CB  17                  		rla
      82.  00:41CC  CB 3A               		srl d ; primo shift, il secondo dopo la out
      83.  00:41CE                      
      84.  00:41CE  D3 99               		out (0x99),a ;set bits 14-16
      85.  00:41D0  3E 8E               		ld a,14+128
      86.  00:41D2  D3 99               		out (0x99),a
      87.  00:41D4                      
      88.  00:41D4  CB 3A               		srl d ; secondo shift.     
      89.  00:41D6                      _vdpsetvramwr14
      90.  00:41D6  7B                  		ld a,e ;set bits 0-7
      91.  00:41D7  D3 99               		out (0x99),a
      92.  00:41D9  7A                  		ld a,d ;set bits 8-13
      93.  00:41DA  F6 40               		or 0x40 ; + write access
      94.  00:41DC  D3 99               		out (0x99),a
      95.  00:41DE  C9                  		ret
      96.  00:41DF                      	
      97.  00:41DF                      ;Set VDP port #98 to start reading at address CDE (17-bit) ;
      98.  00:41DF                      
      99.  00:41DF                      _vdpsetvramrd:
     100.  00:41DF  79                  		ld a,c
     101.  00:41E0                      ;Set VDP port #98 to start reading at address ADE (17-bit) ;
     102.  00:41E0  CB 02               		rlc d
     103.  00:41E2  17                  		rla
     104.  00:41E3  CB 02               		rlc d
     105.  00:41E5  17                  		rla
     106.  00:41E6  CB 3A               		srl d 			; primo shift, il secondo dopo la out
     107.  00:41E8                      
     108.  00:41E8  D3 99               		out (0x99),a 	; set bits 14-16
     109.  00:41EA  3E 8E               		ld a,14+128
     110.  00:41EC  D3 99               		out (0x99),a
     111.  00:41EE                      
     112.  00:41EE  CB 3A               		srl d 	; secondo shift.            
     113.  00:41F0  7B                  		ld a,e 	; set bits 0-7
     114.  00:41F1  D3 99               		out (0x99),a
     115.  00:41F3  7A                  		ld a,d 	; set bits 8-13
     116.  00:41F4  E6 3F               		and 0x3F
     117.  00:41F6  D3 99               		out (0x99),a
     118.  00:41F8  C9                  		ret
     119.  00:41F9                      
     120.  00:41F9                      ;Display page E in screen 5
     121.  00:41F9                      _setpage:
     122.  00:41F9  7B                  	ld a,e
     123.  00:41FA  87 87 87 87 87      [5]	add a,a ;x32
     124.  00:41FF  F6 1F               	or	 00011111B
     125.  00:4201  F3                  	di
     126.  00:4202  D3 99               	out (0x99),a
     127.  00:4204  3E 82               	ld a,2+128
     128.  00:4206  D3 99               	out (0x99),a
     129.  00:4208  FB                  	ei            
     130.  00:4209  C9                  	ret
     131.  00:420A                      
     132.  00:420A  (00:005F)           chgmod        equ     0x005f      ;change graphic mode
     133.  00:420A  (00:000C)           RDSLT         equ     0x000c      ;read address HL in slot A
     134.  00:420A  (00:0156)           KILBUF        equ     0x0156      ;clear keyboard buffer
     135.  00:420A                      
     136.  00:420A                      set_scr:
     137.  00:420A                      	
     138.  00:420A                      	// sprites 16x16
     139.  00:420A  3A E0 F3            	ld		a,(RG1SAV)
     140.  00:420D  F6 02               	or		00000010B
     141.  00:420F  32 E0 F3            	ld		(RG1SAV),a
     142.  00:4212                      
     143.  00:4212                      	// enable sprites + TP
     144.  00:4212  3A E7 FF            	ld		a,(RG8SAV)
     145.  00:4215                      	; or		00100010B
     146.  00:4215  F6 20               	or		00100000B
     147.  00:4217  32 E7 FF            	ld		(RG8SAV),a
     148.  00:421A                      		
     149.  00:421A                      	// Set @50Hz (only PAL is supported)
     150.  00:421A  3A 02 CA            	ld	a,(SEL_NTSC)
     151.  00:421D  A7                  	and 	a
     152.  00:421E  20 07               	jr		nz,1f
     153.  00:4220                      	
     154.  00:4220  3A E8 FF            	ld		a,(RG9SAV)		
     155.  00:4223  F6 02               	or		00000010B		; PAL
     156.  00:4225  18 05               	jr	2f
     157.  00:4227                      1:		
     158.  00:4227  3A E8 FF            	ld		a,(RG9SAV)		
     159.  00:422A  E6 FD               	and		11111101B		; NTSC 
     160.  00:422C  32 E8 FF            2:	ld		(RG9SAV),a
     161.  00:422F                      
     162.  00:422F  3E 08               	ld  	a,8
     163.  00:4231  CD 5F 00            	call	chgmod
     164.  00:4234                      
     165.  00:4234  3A E8 FF            	ld		a,(RG9SAV)		
     166.  00:4237  E6 7F               	and		01111111B		; 192 lines	
     167.  00:4239  32 E8 FF            	ld		(RG9SAV),a
     168.  00:423C  D3 99               	out		(0x99),a
     169.  00:423E  3E 89               	ld		a,9+128
     170.  00:4240  D3 99               	out		(0x99),a
     171.  00:4242                      	
     172.  00:4242                      	// border color
     173.  00:4242  AF                  	xor		a
     174.  00:4243  32 E6 F3            	ld		(RG7SAV),a
     175.  00:4246  D3 99               	out		(0x99),a
     176.  00:4248  3E 87               	ld		a,7+128
     177.  00:424A  D3 99               	out		(0x99),a
     178.  00:424C  C9                  	ret
     179.  00:424D                      
     180.  00:424D                      
     181.  00:424D                      _waitvdp:
     182.  00:424D  3E 02               	ld a,2
     183.  00:424F  D3 99               	out (0x99),a
     184.  00:4251  3E 8F               	ld a, 128+15
     185.  00:4253  D3 99               	out (0x99),a
     186.  00:4255  DB 99               1:  in	a,(0x99)
     187.  00:4257  0F                  	rrca
     188.  00:4258  DA 55 42            	jp c,1b
     189.  00:425B                      
     190.  00:425B  C9                  	ret
     191.  00:425C                      
     192.  00:425C                      ; .inf:
     193.  00:425C                      	; ld	a,r			; random colour
     194.  00:425C                      	; out		(0x99),a
     195.  00:425C                      	; ld		a,7+128
     196.  00:425C                      	; out		(0x99),a
     197.  00:425C                      	; jp	1b
     198.  00:425C                      	
      39   00:425C                      		include isr.asm
       1.  00:425C                      
       2.  00:425C                      
       3.  00:425C                      _isrinit:
       4.  00:425C  21 38 00            		ld	hl,0x0038
       5.  00:425F  36 C3               		ld	(hl),0xC3
       6.  00:4261  23                  		inc	hl
       7.  00:4262  36 35               		ld	(hl),low _scroll
       8.  00:4264  23                  		inc	hl
       9.  00:4265  36 43               		ld	(hl),high _scroll
      10.  00:4267                      
      11.  00:4267                      ; set interrupt line
      12.  00:4267  3E 9E               		LD    A,YSIZE-2
      13.  00:4269  D3 99               		out (0x99),a
      14.  00:426B  3E 93               		LD    A,19+128
      15.  00:426D  D3 99               		out (0x99),a
      16.  00:426F                      	
      17.  00:426F                      ; enable line interrupt
      18.  00:426F  3A DF F3            		LD    A,(RG0SAV)
      19.  00:4272  F6 10               		OR    00010000B
      20.  00:4274  32 DF F3            		LD    (RG0SAV),A
      21.  00:4277  D3 99               		out (0x99),a
      22.  00:4279  3E 80               		LD    A,0+128
      23.  00:427B  D3 99               		out (0x99),a
      24.  00:427D  C9                  		ret
      25.  00:427E                      	
      26.  00:427E                      ; _intreset:
      27.  00:427E                      		; di
      28.  00:427E                      		; ld	hl,0x0038
      29.  00:427E                      		; ld	(hl),0xC3
      30.  00:427E                      		; inc	hl
      31.  00:427E                      		; ld	(hl),low _fake_isr
      32.  00:427E                      		; inc	hl
      33.  00:427E                      		; ld	(hl),high _fake_isr
      34.  00:427E                      
      35.  00:427E                      ; ; disable line interrupt		
      36.  00:427E                      		; LD    A,(RG0SAV)
      37.  00:427E                      		; and    11101111B
      38.  00:427E                      		; LD    (RG0SAV),A
      39.  00:427E                      		; out (0x99),a
      40.  00:427E                      		; LD    A,0+128
      41.  00:427E                      		; out (0x99),a
      42.  00:427E                      		; ei
      43.  00:427E                      		; ret
      44.  00:427E                      	
      45.  00:427E                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      46.  00:427E                      	
      47.  00:427E                      vblank
      48.  00:427E                      		; ld	a,(noscroll)
      49.  00:427E                      		; or	a
      50.  00:427E                      		; jr	z,1f
      51.  00:427E                      		
      52.  00:427E  E5                  		push   hl         
      53.  00:427F  D5                  		push   de         
      54.  00:4280  C5                  		push   bc         
      55.  00:4281  D9                  		exx               
      56.  00:4282  08                  		ex     af,af'     
      57.  00:4283  E5                  		push   hl         
      58.  00:4284  D5                  		push   de         
      59.  00:4285  C5                  		push   bc         
      60.  00:4286  F5                  		push   af         
      61.  00:4287  FD E5               		push   iy         
      62.  00:4289  DD E5               		push   ix         
      63.  00:428B                      
      64.  00:428B  2A 04 CA            		ld	hl,(_xmappos)			; corner top left of the screen window in the map in pixels
      65.  00:428E  3E 0F               		ld	a,15
      66.  00:4290  A5                  		and	l
      67.  00:4291  32 07 CA            		ld	(_xoffset),a			; screen offset
      68.  00:4294                      		
      69.  00:4294                      		repeat 4
      70.  00:4294                    < 		srl	h
      71.  00:4294                    < 		rr	l
      72.  00:4294                    < 		endrepeat					; corner top left of the screen window in the map in tiles
      72.  00:4294  CB 3C CB 1D CB 3C CB 1D CB 3C CB 1D CB 3C CB 1D 
      73.  00:42A4                      		
      74.  00:42A4  11 10 C0            		ld	de,_levelmap+16
      75.  00:42A7  19                  		add	hl,de					; HL = corner top right of the screen window in the map in tiles
      76.  00:42A8                      		
      77.  00:42A8  CD 62 43            		call	pageswap			; test for page swap
      78.  00:42AB  CD 54 43            		call	xscroll				; move the screen 			
      79.  00:42AE  CD 73 44            		call	_brdrs				; build a column right pointed by HL, clear a column left, move a stripe of screen
      80.  00:42B1                      		
      81.  00:42B1                      		; ld		a,00000011B
      82.  00:42B1                      		; out		(0x99),a
      83.  00:42B1                      		; ld		a,7+128
      84.  00:42B1                      		; out		(0x99),a
      85.  00:42B1                      		
      86.  00:42B1  2A 04 CA            		ld	hl,(_xmappos)
      87.  00:42B4  23                  		inc	hl
      88.  00:42B5  3E 0F               		ld	a,15
      89.  00:42B7  A4                  		and	h
      90.  00:42B8  67                  		ld	h,a
      91.  00:42B9  22 04 CA            		ld	(_xmappos),hl			; scroll one pixel right
      92.  00:42BC                      
      93.  00:42BC  2A 9E FC            		ld	hl,(_jiffy)				; timer
      94.  00:42BF  23                  		inc	hl
      95.  00:42C0  22 9E FC            		ld	(_jiffy),hl
      96.  00:42C3                      				
      97.  00:42C3                      		; xor		a
      98.  00:42C3                      		; out		(0x99),a
      99.  00:42C3                      		; ld		a,7+128
     100.  00:42C3                      		; out		(0x99),a
     101.  00:42C3                      		
     102.  00:42C3  DD E1               		pop    ix         
     103.  00:42C5  FD E1               		pop    iy         
     104.  00:42C7  F1                  		pop    af         
     105.  00:42C8  C1                  		pop    bc         
     106.  00:42C9  D1                  		pop    de         
     107.  00:42CA  E1                  		pop    hl         
     108.  00:42CB  08                  		ex     af,af'     
     109.  00:42CC  D9                  		exx               
     110.  00:42CD  C1                  		pop    bc         
     111.  00:42CE  D1                  		pop    de         
     112.  00:42CF  E1                  		pop    hl         
     113.  00:42D0                      
     114.  00:42D0                      1:		
     115.  00:42D0  AF                  		xor	a 			; read S#0
     116.  00:42D1  D3 99               		out (0x99),a
     117.  00:42D3  3E 8F               		ld a,128+15
     118.  00:42D5  D3 99               		out (0x99),a
     119.  00:42D7  DB 99               		in	a,(0x99)
     120.  00:42D9  F1                  		pop	af
     121.  00:42DA  FB                  		ei
     122.  00:42DB  C9                  		ret
     123.  00:42DC                      		
     124.  00:42DC                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
     125.  00:42DC                      
     126.  00:42DC                      lint:
     127.  00:42DC  3A E0 F3            		ld	a,(RG1SAV)
     128.  00:42DF  E6 BF               		and	010111111B			; disable screen
     129.  00:42E1  32 E0 F3            		ld	(RG1SAV),a
     130.  00:42E4  D3 99               		out	(0x99),a
     131.  00:42E6  3E 81               		ld	a,1+128
     132.  00:42E8  D3 99               		out	(0x99),a
     133.  00:42EA                      		
     134.  00:42EA  3E FC               		ld		a,11111100B
     135.  00:42EC  D3 99               		out		(0x99),a
     136.  00:42EE  3E 87               		ld		a,7+128
     137.  00:42F0  D3 99               		out		(0x99),a
     138.  00:42F2                      		
     139.  00:42F2  CD 4D 42            		call _waitvdp
     140.  00:42F5                      		
     141.  00:42F5  AF                  		xor		a
     142.  00:42F6  D3 99               		out	(099h),a
     143.  00:42F8  3E 92               		ld	a,18+128
     144.  00:42FA  D3 99               		out	(099h),a		
     145.  00:42FC                      
     146.  00:42FC  3E 3F               		ld a,3FH			; 0XX11111B
     147.  00:42FE  D3 99               		out (0x99),a
     148.  00:4300  3E 82               		ld a,2+128			; R#2 
     149.  00:4302  D3 99               		out (0x99),a		; score bar in page 1
     150.  00:4304                      
     151.  00:4304  3A E0 F3            		ld	a,(RG1SAV)
     152.  00:4307  F6 42               		or 	01000010B		; enable screen
     153.  00:4309  32 E0 F3            		ld	(RG1SAV),a
     154.  00:430C  D3 99               		out	(0x99),a
     155.  00:430E  3E 81               		ld	a,1+128
     156.  00:4310  D3 99               		out	(0x99),a
     157.  00:4312                      		
     158.  00:4312                      		; ld	a,(noscroll)
     159.  00:4312                      		; or	a
     160.  00:4312                      		; jr	z,1f
     161.  00:4312                      		
     162.  00:4312  E5                  		push   hl         
     163.  00:4313  D5                  		push   de         
     164.  00:4314  C5                  		push   bc         
     165.  00:4315  D9                  		exx               
     166.  00:4316  08                  		ex     af,af'     
     167.  00:4317  E5                  		push   hl         
     168.  00:4318  D5                  		push   de         
     169.  00:4319  C5                  		push   bc         
     170.  00:431A  F5                  		push   af         
     171.  00:431B  FD E5               		push   iy         
     172.  00:431D  DD E5               		push   ix         
     173.  00:431F                      
     174.  00:431F  CD 4D 42            		call _waitvdp				; no need in PAL
     175.  00:4322  CD C4 43            		call animtest
     176.  00:4325                      
     177.  00:4325  DD E1               		pop    ix         
     178.  00:4327  FD E1               		pop    iy         
     179.  00:4329  F1                  		pop    af         
     180.  00:432A  C1                  		pop    bc         
     181.  00:432B  D1                  		pop    de         
     182.  00:432C  E1                  		pop    hl         
     183.  00:432D  08                  		ex     af,af'     
     184.  00:432E  D9                  		exx               
     185.  00:432F  C1                  		pop    bc         
     186.  00:4330  D1                  		pop    de         
     187.  00:4331  E1                  		pop    hl         
     188.  00:4332                      
     189.  00:4332  F1                  		pop	 af
     190.  00:4333  FB                  		ei
     191.  00:4334  C9                  		ret
     192.  00:4335                      
     193.  00:4335                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     194.  00:4335                      ;  actual ISR handler
     195.  00:4335                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     196.  00:4335                      
     197.  00:4335                      _scroll:
     198.  00:4335  F5                  		push	af
     199.  00:4336                      		
     200.  00:4336  3E 01               		ld a,1 			; read S#1
     201.  00:4338  D3 99               		out (0x99),a
     202.  00:433A  3E 8F               		ld a,128+15
     203.  00:433C  D3 99               		out (0x99),a
     204.  00:433E                      		 
     205.  00:433E  DB 99               		in	a,(0x99)
     206.  00:4340  1F                  		rra
     207.  00:4341  DA DC 42            		jp	c,lint	
     208.  00:4344                      
     209.  00:4344  AF                  		xor	a 			; read S#0
     210.  00:4345  D3 99               		out (0x99),a
     211.  00:4347  3E 8F               		ld a,128+15
     212.  00:4349  D3 99               		out (0x99),a
     213.  00:434B                      		 
     214.  00:434B  DB 99               		in	a,(0x99)
     215.  00:434D  07                  		rlca
     216.  00:434E  DA 7E 42            		jp	c,vblank
     217.  00:4351                      		
     218.  00:4351  F1                  		pop	af			; none of them (?)
     219.  00:4352  FB                  		ei
     220.  00:4353  C9                  		ret
     221.  00:4354                      	
     222.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
     223.  00:4354                      ; ; manage score bar at YSIZE
     224.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
     225.  00:4354                      ; waitHBLANK
     226.  00:4354                      		; ld a,2 				; read S#2
     227.  00:4354                      		; out (0x99),a
     228.  00:4354                      		; ld a,128+15
     229.  00:4354                      		; out (0x99),a		; poll for HBLANK
     230.  00:4354                      		 
     231.  00:4354                      ; ; 1:	in	a,(0x99)		; we are in HBLANK already, so wait until end of HBLANK
     232.  00:4354                      ; ; 		and	0x20
     233.  00:4354                      ; ; 		jp	nz,1b			
     234.  00:4354                      
     235.  00:4354                      ; 2:		in	a,(0x99)		; wait until end of the active area
     236.  00:4354                      		; and	0x20
     237.  00:4354                      		; jp	z,2b
     238.  00:4354                      		; ret
     239.  00:4354                      	
     240.  00:4354                      ; lint:	
     241.  00:4354                      		; ; call	waitHBLANK
     242.  00:4354                      		; ; now we are at the start of HBLANK
     243.  00:4354                      	
     244.  00:4354                      		; ; ld	a,(RG1SAV)
     245.  00:4354                      		; ; and	010111111B			; disable screen
     246.  00:4354                      		; ; ld	(RG1SAV),a
     247.  00:4354                      		; ; out	(0x99),a
     248.  00:4354                      		; ; ld	a,1+128
     249.  00:4354                      		; ; out	(0x99),a
     250.  00:4354                      
     251.  00:4354                      
     252.  00:4354                      		; ld a,00011111B		; 0XX11111B
     253.  00:4354                      		; out (0x99),a
     254.  00:4354                      		; ld a,2+128			; R#2 
     255.  00:4354                      		; out (0x99),a		; score bar in page 0
     256.  00:4354                      
     257.  00:4354                      		; LD    A,mapHeight*16-(YSIZE-2)	; SCROLL DOWN
     258.  00:4354                      		; out (0x99),a
     259.  00:4354                      		; LD    A,23+128
     260.  00:4354                      		; out (0x99),a
     261.  00:4354                      
     262.  00:4354                      		; xor		a
     263.  00:4354                      		; out	(099h),a
     264.  00:4354                      		; ld	a,18+128
     265.  00:4354                      		; out	(099h),a		; set adjust 0,0
     266.  00:4354                      
     267.  00:4354                      
     268.  00:4354                      		; ld	a,(RG8SAV)
     269.  00:4354                      		; or	000000010B		; disable sprites
     270.  00:4354                      		; ld	(RG8SAV),a
     271.  00:4354                      		; out	(0x99),a
     272.  00:4354                      		; ld	a,8+128
     273.  00:4354                      		; out	(0x99),a
     274.  00:4354                      
     275.  00:4354                      		; ; call	waitHBLANK
     276.  00:4354                      		
     277.  00:4354                      		; ; ld	a,(RG1SAV)
     278.  00:4354                      		; ; or 	01000010B		; enable screen
     279.  00:4354                      		; ; ld	(RG1SAV),a
     280.  00:4354                      		; ; out	(0x99),a
     281.  00:4354                      		; ; ld	a,1+128
     282.  00:4354                      		; ; out	(0x99),a
     283.  00:4354                      	
     284.  00:4354                      		; push   hl         
     285.  00:4354                      		; push   de         
     286.  00:4354                      		; push   bc         
     287.  00:4354                      		; exx               
     288.  00:4354                      		; ex     af,af'     
     289.  00:4354                      		; push   hl         
     290.  00:4354                      		; push   de         
     291.  00:4354                      		; push   bc         
     292.  00:4354                      		; push   af         
     293.  00:4354                      		; push   iy         
     294.  00:4354                      		; push   ix         
     295.  00:4354                      
     296.  00:4354                      		
     297.  00:4354                      		; ld	hl,.exit
     298.  00:4354                      		; push	hl
     299.  00:4354                      		; ld		a,(dxmap)
     300.  00:4354                      		; rlc a
     301.  00:4354                      
     302.  00:4354                      		; jp	nc,_blank_line_lft		; >0 == dx
     303.  00:4354                      		; jp	 c,_blank_line_rgt		; <0 == sx
     304.  00:4354                      ; 1:		pop	hl
     305.  00:4354                      ; .exit:
     306.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     307.  00:4354                      		; ; ld		a,00001000B
     308.  00:4354                      		; ; out		(0x99),a
     309.  00:4354                      		; ; ld		a,7+128
     310.  00:4354                      		; ; out		(0x99),a
     311.  00:4354                      		
     312.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     313.  00:4354                      		; call	test_star
     314.  00:4354                      
     315.  00:4354                      		; xor		a
     316.  00:4354                      		; out		(0x99),a
     317.  00:4354                      		; ld		a,7+128
     318.  00:4354                      		; out		(0x99),a
     319.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     320.  00:4354                      		
     321.  00:4354                      		; pop    ix         
     322.  00:4354                      		; pop    iy         
     323.  00:4354                      		; pop    af         
     324.  00:4354                      		; pop    bc         
     325.  00:4354                      		; pop    de         
     326.  00:4354                      		; pop    hl         
     327.  00:4354                      		; ex     af,af'     
     328.  00:4354                      		; exx               
     329.  00:4354                      		; pop    bc         
     330.  00:4354                      		; pop    de         
     331.  00:4354                      		; pop    hl         
     332.  00:4354                      
     333.  00:4354                      		; pop		af
     334.  00:4354                      		; ei
     335.  00:4354                      		; ret
     336.  00:4354                      
     337.  00:4354                      ; ;-------------------------------------		
     338.  00:4354                      
     339.  00:4354                      ; border_color	equ 	0;	00100101B
     340.  00:4354                      		
     341.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
     342.  00:4354                      ; ;   manage normal vblank routine
     343.  00:4354                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;	
     344.  00:4354                      
     345.  00:4354                      ; vblank:
     346.  00:4354                      		; call	activate_window	
     347.  00:4354                      
     348.  00:4354                      		; push   hl         
     349.  00:4354                      		; push   de         
     350.  00:4354                      		; push   bc         
     351.  00:4354                      		; exx               
     352.  00:4354                      		; ex     af,af'     
     353.  00:4354                      		; push   hl         
     354.  00:4354                      		; push   de         
     355.  00:4354                      		; push   bc         
     356.  00:4354                      		; push   af         
     357.  00:4354                      		; push   iy         
     358.  00:4354                      		; push   ix         
     359.  00:4354                      
     360.  00:4354                      		; ; ld	a,00011100B		; red
     361.  00:4354                      		; ; out		(0x99),a
     362.  00:4354                      		; ; ld		a,7+128
     363.  00:4354                      		; ; out		(0x99),a
     364.  00:4354                      
     365.  00:4354                      		; call	changedir
     366.  00:4354                      				
     367.  00:4354                      		; ld	hl,(_jiffy)
     368.  00:4354                      		; inc	hl
     369.  00:4354                      		; ld	(_jiffy),hl
     370.  00:4354                      				
     371.  00:4354                      		; ; ld	a,00011100B		; red
     372.  00:4354                      		; ; out	(0x99),a
     373.  00:4354                      		; ; ld	a,7+128
     374.  00:4354                      		; ; out	(0x99),a
     375.  00:4354                      		
     376.  00:4354                      
     377.  00:4354                      		; ; xor		a		; black
     378.  00:4354                      		; ; out	(0x99),a
     379.  00:4354                      		; ; ld	a,7+128
     380.  00:4354                      		; ; out	(0x99),a
     381.  00:4354                      	
     382.  00:4354                      		; pop    ix         
     383.  00:4354                      		; pop    iy         
     384.  00:4354                      		; pop    af         
     385.  00:4354                      		; pop    bc         
     386.  00:4354                      		; pop    de         
     387.  00:4354                      		; pop    hl         
     388.  00:4354                      		; ex     af,af'     
     389.  00:4354                      		; exx               
     390.  00:4354                      		; pop    bc         
     391.  00:4354                      		; pop    de         
     392.  00:4354                      		; pop    hl         
     393.  00:4354                      
     394.  00:4354                      		; pop		af
     395.  00:4354                      		; ei
     396.  00:4354                      		; ret
     397.  00:4354                      ; ;-------------------------------------
     398.  00:4354                      ; ;-------------------------------------
     399.  00:4354                      
     400.  00:4354                      ; _blank_line_lft:
     401.  00:4354                      		; ; ld	a,00000111B		; blue
     402.  00:4354                      		; ; out	(0x99),a
     403.  00:4354                      		; ; ld	a,7+128
     404.  00:4354                      		; ; out	(0x99),a
     405.  00:4354                      
     406.  00:4354                      		; ld	e,0
     407.  00:4354                      		; call	blank_line
     408.  00:4354                      
     409.  00:4354                      		
     410.  00:4354                      		
     411.  00:4354                      		; ; xor	a
     412.  00:4354                      		; ; out	(0x99),a
     413.  00:4354                      		; ; ld	a,7+128
     414.  00:4354                      		; ; out	(0x99),a
     415.  00:4354                      		; ret
     416.  00:4354                      
     417.  00:4354                      ; ;-------------------------------------	
     418.  00:4354                      
     419.  00:4354                      ; _blank_line_rgt
     420.  00:4354                      		; ; ld	a,00000111B		; blue
     421.  00:4354                      		; ; out	(0x99),a
     422.  00:4354                      		; ; ld	a,7+128
     423.  00:4354                      		; ; out	(0x99),a
     424.  00:4354                      
     425.  00:4354                      		; ld	e,240
     426.  00:4354                      		; call	blank_line
     427.  00:4354                      
     428.  00:4354                      		; ; xor	a
     429.  00:4354                      		; ; out	(0x99),a
     430.  00:4354                      		; ; ld	a,7+128
     431.  00:4354                      		; ; out	(0x99),a
     432.  00:4354                      		; ret
     433.  00:4354                      		
     434.  00:4354                      ; ;-------------------------------------	
     435.  00:4354                      		
     436.  00:4354                      ; inc_xoffset
     437.  00:4354                      		; call	plot_line_rgt1
     438.  00:4354                      		; call	.movex
     439.  00:4354                      		; call	plot_line_rgt2
     440.  00:4354                      				
     441.  00:4354                      		; ; ld	a,00000010B		; blue
     442.  00:4354                      		; ; out	(0x99),a
     443.  00:4354                      		; ; ld	a,7+128
     444.  00:4354                      		; ; out	(0x99),a
     445.  00:4354                      		
     446.  00:4354                      		; jp		newxmap
     447.  00:4354                      		
     448.  00:4354                      ; .movex
     449.  00:4354                      		; ld		a,(_xoffset)
     450.  00:4354                      		; and		a
     451.  00:4354                      		; jr		nz,.case1_15
     452.  00:4354                      ; .case0
     453.  00:4354                      		; ld 		a,(_displaypage)
     454.  00:4354                      		; xor		1
     455.  00:4354                      		; ld 		d,a
     456.  00:4354                      		; ld		e,240
     457.  00:4354                      		; jp		clrboder
     458.  00:4354                      		
     459.  00:4354                      ; .case1_15
     460.  00:4354                      ; [4]		add		a,a
     461.  00:4354                      		; ld		e,a
     462.  00:4354                      		; sub		a,16
     463.  00:4354                      		; ld		d,a
     464.  00:4354                      		; jp		move_block
     465.  00:4354                      
     466.  00:4354                      
     467.  00:4354                      ; ;-------------------------------------	
     468.  00:4354                      	
     469.  00:4354                      ; dec_xoffset
     470.  00:4354                      		; call	plot_line_lft1
     471.  00:4354                      		; call	.movex
     472.  00:4354                      		; call	plot_line_lft2
     473.  00:4354                      				
     474.  00:4354                      		; ; ld	a,00000011B		; blue
     475.  00:4354                      		; ; out	(0x99),a
     476.  00:4354                      		; ; ld	a,7+128
     477.  00:4354                      		; ; out	(0x99),a
     478.  00:4354                      
     479.  00:4354                      		; jp		newxmap
     480.  00:4354                      		
     481.  00:4354                      ; .movex
     482.  00:4354                      		; ld		a,(_xoffset)
     483.  00:4354                      		; cp	15
     484.  00:4354                      		; jr		nz,.case0_14
     485.  00:4354                      ; .case15
     486.  00:4354                      		; ld 		a,(_displaypage)
     487.  00:4354                      		; xor		1
     488.  00:4354                      		; ld 		d,a
     489.  00:4354                      		; ld		e,0
     490.  00:4354                      		; jp		clrboder
     491.  00:4354                      		
     492.  00:4354                      ; .case0_14
     493.  00:4354                      ; [4]		add		a,a
     494.  00:4354                      		; ld		e,a
     495.  00:4354                      		; add		a,16
     496.  00:4354                      		; ld		d,a
     497.  00:4354                      		; jp		move_block
     498.  00:4354                      
     499.  00:4354                      
     500.  00:4354                      ; ;-------------------------------------
     501.  00:4354                      ; newxmap
     502.  00:4354                      		; call 	plot_enemy		
     503.  00:4354                      		; call	color_enemy
     504.  00:4354                      
     505.  00:4354                      		; ld		hl,(_xmapx4)
     506.  00:4354                      		; ld		a,(dxmap)
     507.  00:4354                      		; ld		e,a
     508.  00:4354                      		; add 	a,a
     509.  00:4354                      		; sbc 	a,a
     510.  00:4354                      		; ld		d,a
     511.  00:4354                      		; add 	hl,de
     512.  00:4354                      		; ld		(_xmapx4),hl
     513.  00:4354                      		; repeat 2
     514.  00:4354                      		; sra		h
     515.  00:4354                      		; rr  	l
     516.  00:4354                      		; endrepeat
     517.  00:4354                      		; ld		(xmap),hl
     518.  00:4354                      		; ld 		a,l
     519.  00:4354                      		; and		15
     520.  00:4354                      		; ld		(_xoffset),a
     521.  00:4354                      		; repeat 4
     522.  00:4354                      		; sra		h
     523.  00:4354                      		; rr  	l
     524.  00:4354                      		; endrepeat
     525.  00:4354                      		; ld 		a,l
     526.  00:4354                      		; and		1
     527.  00:4354                      		; ld		(_displaypage),a
     528.  00:4354                      		; ld		de,_levelmap
     529.  00:4354                      		; add		hl,de
     530.  00:4354                      		; ld		(_levelmap_pos),hl
     531.  00:4354                      		; ret
     532.  00:4354                      		
     533.  00:4354                      ; ;-------------------------------------
     534.  00:4354                      
     535.  00:4354                      ; activate_window	
     536.  00:4354                      		; ld	a,(_displaypage)
     537.  00:4354                      ; [5]		add a,a 			; x32
     538.  00:4354                      		; or	00011111B
     539.  00:4354                      		; out (0x99),a
     540.  00:4354                      		; ld a,2+128
     541.  00:4354                      		; out (0x99),a
     542.  00:4354                      		
     543.  00:4354                      		; LD    A,(_yoffset)		; SCROLL DOWN
     544.  00:4354                      		; out (0x99),a
     545.  00:4354                      		; add    A,YSIZE-1
     546.  00:4354                      		; ld		l,a
     547.  00:4354                      		; LD    A,23+128
     548.  00:4354                      		; out (0x99),a
     549.  00:4354                      
     550.  00:4354                      		; ld    a,l
     551.  00:4354                      		; out (0x99),a			; set interrupt line
     552.  00:4354                      		; LD    A,19+128
     553.  00:4354                      		; out (0x99),a
     554.  00:4354                      		
     555.  00:4354                      		; ld	a,(_xoffset)		; set R#18 only if not scrolling
     556.  00:4354                      		; add	a,-8
     557.  00:4354                      		; and	0Fh
     558.  00:4354                      		; out	(099h),a
     559.  00:4354                      		; ld	a,18+128
     560.  00:4354                      		; out	(099h),a
     561.  00:4354                      
     562.  00:4354                      		; ld	a,(RG8SAV)		; enable sprites
     563.  00:4354                      		; and	11111101B
     564.  00:4354                      		; ld	(RG8SAV),a
     565.  00:4354                      		; out	(0x99),a
     566.  00:4354                      		; ld	a,8+128
     567.  00:4354                      		; out	(0x99),a
     568.  00:4354                      
     569.  00:4354                      		; ret
     570.  00:4354                      			
     571.  00:4354                      ; ;-------------------------------------
     572.  00:4354                      	
     573.  00:4354                      ; changedir:
     574.  00:4354                      		; ld		a,(_dxmap)
     575.  00:4354                      		; and		128
     576.  00:4354                      		; ld		b,a
     577.  00:4354                      		; inc		hl
     578.  00:4354                      		; ld		a,(dxmap)		; dxmap
     579.  00:4354                      		; ld		c,a
     580.  00:4354                      		; and		128
     581.  00:4354                      		; xor		b				; compare signs
     582.  00:4354                      		; jp		z,nodirchange
     583.  00:4354                      		; ld		(_dxchng),a		; a<>0
     584.  00:4354                      		; bit		7,c
     585.  00:4354                      		; jr		z,.right
     586.  00:4354                      ; .left
     587.  00:4354                      		; call	plot_line_lft1
     588.  00:4354                      		; ld 		a,(_displaypage)
     589.  00:4354                      		; xor		1
     590.  00:4354                      		; ld 		d,a
     591.  00:4354                      		; ld		e,0
     592.  00:4354                      		; call	clrboder
     593.  00:4354                      		; call	plot_line_lft2
     594.  00:4354                      		; jp		newxmap
     595.  00:4354                      
     596.  00:4354                      ; .right
     597.  00:4354                      		; call	plot_line_rgt1
     598.  00:4354                      		; ld 		a,(_displaypage)
     599.  00:4354                      		; xor		1
     600.  00:4354                      		; ld 		d,a
     601.  00:4354                      		; ld		e,240
     602.  00:4354                      		; call	clrboder
     603.  00:4354                      		; call	plot_line_rgt2
     604.  00:4354                      		; jp		newxmap
     605.  00:4354                      
     606.  00:4354                      ; nodirchange:
     607.  00:4354                      		; ld		a,(_dxchng)
     608.  00:4354                      		; and		a
     609.  00:4354                      		; jr		nz,1f
     610.  00:4354                      		; bit		7,c
     611.  00:4354                      		; jp		z,inc_xoffset
     612.  00:4354                      		; jp		dec_xoffset
     613.  00:4354                      	
     614.  00:4354                      ; 1:		xor	a
     615.  00:4354                      		; ld		(_dxchng),a
     616.  00:4354                      		; bit		7,c
     617.  00:4354                      		; jp		z,.right
     618.  00:4354                      ; .left
     619.  00:4354                      		; call	plot_line_lft1
     620.  00:4354                      		; ld		e,240-16
     621.  00:4354                      		; ld		d,240
     622.  00:4354                      		; call	move_block
     623.  00:4354                      		; call	plot_line_lft2
     624.  00:4354                      		; jp		newxmap
     625.  00:4354                      
     626.  00:4354                      ; .right
     627.  00:4354                      		; call	plot_line_rgt1
     628.  00:4354                      		; ld		e,16
     629.  00:4354                      		; ld		d,0
     630.  00:4354                      		; call	move_block
     631.  00:4354                      		; call	plot_line_rgt2
     632.  00:4354                      		; jp		newxmap
     633.  00:4354                      
     634.  00:4354                      ; ;-------------------------------------
      40   00:4354                      		include fsmscroll.asm
       1.  00:4354                      
       2.  00:4354                      
       3.  00:4354                      xscroll:
       4.  00:4354  3A 07 CA            		ld		a,(_xoffset)		; set R#18 
       5.  00:4357                      
       6.  00:4357  C6 F8               		add		a,-8
       7.  00:4359  E6 0F               		and		0Fh
       8.  00:435B  D3 99               		out		(099h),a
       9.  00:435D  3E 92               		ld		a,18+128
      10.  00:435F  D3 99               		out		(099h),a
      11.  00:4361                      		
      12.  00:4361  C9                  		ret
      13.  00:4362                      
      14.  00:4362                      pageswap:
      15.  00:4362  3A 04 CA            		ld		a,(_xmappos)
      16.  00:4365  E6 10               		and		16
      17.  00:4367  87                  		add 	a,a 		;x32
      18.  00:4368  F6 1F               		or		 00011111B
      19.  00:436A  D3 99               		out 	(0x99),a
      20.  00:436C  3E 82               		ld 		a,2+128
      21.  00:436E  D3 99               		out 	(0x99),a
      22.  00:4370  3A 04 CA            		ld		a,(_xmappos)
      23.  00:4373  E6 10               		and		16
      24.  00:4375  28 02               		jr		z,1f
      25.  00:4377  3E 01               		ld		a,1
      26.  00:4379  32 06 CA            1:		ld		(_displaypage),a		
      27.  00:437C  C9                  		ret
      28.  00:437D                      		
      41   00:437D                      		include vdpcmds.asm
       1.  00:437D                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
       2.  00:437D                      ; hl	-> 256 tile data (columnwise)
       3.  00:437D                      ; destination:
       4.  00:437D                      ; 	d,e = dy,dx
       5.  00:437D                      ;	b = page
       6.  00:437D                      ;
       7.  00:437D                      LMMC_tile:
       8.  00:437D  3E 24               		ld 		a, 36
       9.  00:437F  D3 99               		out 	(0x99),a
      10.  00:4381  3E 91               		ld 		a, 17+128
      11.  00:4383  D3 99               		out 	(0x99),a
      12.  00:4385                      
      13.  00:4385  0E 9B               		ld		c,0x9B
      14.  00:4387  ED 59               		out 	(c), e 			; dx
      15.  00:4389  AF                  		xor		a
      16.  00:438A  D3 9B               		out 	(0x9B), a		; dx (high)
      17.  00:438C                      
      18.  00:438C  ED 51               		out 	(c), d			; dy
      19.  00:438E                      								; destination page
      20.  00:438E  ED 41               		out 	(c), b			; dy (high-> page 0 or 1)
      21.  00:4390                      		
      22.  00:4390  06 10               		ld 		b,16
      23.  00:4392  ED 41               		out 	(c), b			; x block size
      24.  00:4394  D3 9B               		out 	(0x9B), a
      25.  00:4396                      
      26.  00:4396  ED 41               		out 	(c), b			; y block size
      27.  00:4398  D3 9B               		out 	(0x9B), a
      28.  00:439A                      
      29.  00:439A  ED A3               		outi					; 1st byte color
      30.  00:439C  D3 9B               		out 	(0x9B), a		; normal tracing
      31.  00:439E                      
      32.  00:439E  3E F0               		ld		a,0xF0			; HMMC
      33.  00:43A0  D3 9B               		out 	(0x9B), a
      34.  00:43A2                      
      35.  00:43A2  3E AC               		ld 		a, 44 + 128
      36.  00:43A4  D3 99               		out 	(0x99),a
      37.  00:43A6  3E 91               		ld 		a, 17+128
      38.  00:43A8  D3 99               		out 	(0x99),a
      39.  00:43AA                      		
      40.  00:43AA  11 0F 00            		ld		de,15
      41.  00:43AD  43                  		ld		b,e					; 15 other bytes
      42.  00:43AE  3E 10               		ld		a,16
      43.  00:43B0                      		
      44.  00:43B0  19                  1:		add		hl,de
      45.  00:43B1  ED A3               		outi						; other byte color
      46.  00:43B3  C2 B0 43            		jp		nz,1b
      47.  00:43B6  47                  		ld		b,a					; 16 other bytes
      48.  00:43B7  25                  		dec		h
      49.  00:43B8  2C                  		inc		l
      50.  00:43B9  C2 B0 43            		jp		nz,1b
      51.  00:43BC                      
      52.  00:43BC  AF                  		xor		a
      53.  00:43BD  D3 99               		out 	(0x99),a
      54.  00:43BF  3E AE               		ld 		a, 46+128
      55.  00:43C1  D3 99               		out 	(0x99),a		; patch: reset vdp commands
      56.  00:43C3                      		
      57.  00:43C3  C9                  		ret
      58.  00:43C4                      
      59.  00:43C4                      
      60.  00:43C4                      animtest:
      61.  00:43C4  16 78               		ld		d,120
      62.  00:43C6  1E 50               		ld		e,80
      63.  00:43C8  3A 07 CA            		ld		a,(_xoffset)		
      64.  00:43CB                      		
      65.  00:43CB                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      66.  00:43CB                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      67.  00:43CB                      ; input
      68.  00:43CB                      ; a = tile number	from page 0
      69.  00:43CB                      ; 
      70.  00:43CB                      ; d = dx	to _displaypage
      71.  00:43CB                      ; e = dy	
      72.  00:43CB                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      73.  00:43CB                      
      74.  00:43CB                      ; destructible tiles have to be in range 0..n-1 in the tile set
      75.  00:43CB                      ; even tiles are the destroyed version
      76.  00:43CB                      ; odd tiles are the integer version
      77.  00:43CB                      
      78.  00:43CB                      move_tile:
      79.  00:43CB  67                  		ld		h,a
      80.  00:43CC  E6 0F               		and		00001111B	
      81.  00:43CE  87 87 87 87         [4]		add		a,a					
      82.  00:43D2  6F                  		ld		l,a			; sx
      83.  00:43D3  7C                  		ld		a,h
      84.  00:43D4  E6 F0               		and		11110000B	; tiles are under the lower border						
      85.  00:43D6  C6 B0               		add		a,160+16
      86.  00:43D8  67                  		ld		h,a			; sy
      87.  00:43D9                      
      88.  00:43D9  3E 20               		ld 		a, 32
      89.  00:43DB  D3 99               		out 	(0x99),a
      90.  00:43DD  3E 91               		ld 		a, 17+128
      91.  00:43DF  D3 99               		out 	(0x99),a
      92.  00:43E1                      
      93.  00:43E1  0E 9B               		ld 		c, 0x9B
      94.  00:43E3                      		
      95.  00:43E3                      		; call _waitvdp				; no need ATM
      96.  00:43E3                      		
      97.  00:43E3  ED 69               		out		(c), l 				; sx
      98.  00:43E5  AF                  		xor 	a
      99.  00:43E6  D3 9B               		out		(0x9B), a 			; sx (high)
     100.  00:43E8                      		
     101.  00:43E8  ED 61               		out		(c), h 	     		; sy
     102.  00:43EA  3E 01               		ld		a,1					; source page
     103.  00:43EC  D3 9B               		out 	(0x9B), a 			; sy 	(high-> page 0 or 1)
     104.  00:43EE                      
     105.  00:43EE  ED 51               		out 	(c), d 				; dx
     106.  00:43F0  AF                  		xor 	a
     107.  00:43F1  D3 9B               		out 	(0x9B), a			; dx (high)
     108.  00:43F3                      		
     109.  00:43F3  ED 59               		out 	(c), e	 			; dy
     110.  00:43F5  3A 06 CA            		ld 		a,(_displaypage)	; destination page	
     111.  00:43F8  D3 9B               		out 	(0x9B), a			; dy 	(high-> page 0 or 1)
     112.  00:43FA                      
     113.  00:43FA  2E 10               		ld 		l,16 				
     114.  00:43FC  ED 69               		out 	(c), l			; x block size
     115.  00:43FE  AF                  		xor 	a
     116.  00:43FF  D3 9B               		out 	(0x9B), a					
     117.  00:4401  ED 69               		out 	(c), l			; y block size
     118.  00:4403  D3 9B               		out 	(0x9B), a
     119.  00:4405  D3 9B               		out 	(0x9B), a
     120.  00:4407  D3 9B               		out 	(0x9B), a
     121.  00:4409                      
     122.  00:4409  3E D0               		ld		a,11010000B
     123.  00:440B  D3 9B               		out 	(0x9B), a			; command HMMM
     124.  00:440D  C9                  		ret
     125.  00:440E                      
     126.  00:440E                      
     127.  00:440E                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     128.  00:440E                      ; input
     129.  00:440E                      ; b = sx	from not _displaypage
     130.  00:440E                      ; d = dx	to _displaypage
     131.  00:440E                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     132.  00:440E                      
     133.  00:440E                      move_slice:
     134.  00:440E  3E 20               		ld 		a, 32
     135.  00:4410  D3 99               		out 	(0x99),a
     136.  00:4412  3E 91               		ld 		a, 17+128
     137.  00:4414  D3 99               		out 	(0x99),a
     138.  00:4416                      
     139.  00:4416  0E 9B               		ld 		c, 0x9B
     140.  00:4418                      		
     141.  00:4418                      		; call _waitvdp				; no need ATM
     142.  00:4418                      		
     143.  00:4418  ED 41               		out		(c), b 				; sx
     144.  00:441A  AF                  		xor a
     145.  00:441B  D3 9B               		out		(0x9B), a 			; sx (high)
     146.  00:441D                      		
     147.  00:441D  D3 9B               		out		(0x9B), a 			; sy
     148.  00:441F  3A 06 CA            		ld 		a,(_displaypage)	; source page
     149.  00:4422  D3 9B               		out 	(0x9B), a 			; sy 	(high-> page 0 or 1)
     150.  00:4424                      
     151.  00:4424  ED 51               		out 	(c), d 				; dx
     152.  00:4426  AF                  		xor a
     153.  00:4427  D3 9B               		out 	(0x9B), a			; dx (high)
     154.  00:4429                      		
     155.  00:4429  D3 9B               		out 	(0x9B), a 			; dy
     156.  00:442B  3A 06 CA            		ld 		a,(_displaypage)	; destination page
     157.  00:442E  EE 01               		xor	1				
     158.  00:4430  D3 9B               		out 	(0x9B), a			; dy 	(high-> page 0 or 1)
     159.  00:4432                      
     160.  00:4432  3E 10               		ld 		a,16 				; block size
     161.  00:4434  D3 9B               		out 	(0x9B), a
     162.  00:4436  AF                  		xor a
     163.  00:4437  D3 9B               		out 	(0x9B), a	
     164.  00:4439  3E A0               		ld		a,10*16				; mapHeight*16
     165.  00:443B  D3 9B               		out 	(0x9B), a			; y block size
     166.  00:443D  AF                  		xor		a
     167.  00:443E  D3 9B               		out 	(0x9B), a
     168.  00:4440  D3 9B               		out 	(0x9B), a
     169.  00:4442  D3 9B               		out 	(0x9B), a
     170.  00:4444                      
     171.  00:4444  3E D0               		ld		a,11010000B
     172.  00:4446  D3 9B               		out 	(0x9B), a			; command HMMM
     173.  00:4448  C9                  		ret
     174.  00:4449                      		
     175.  00:4449                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     176.  00:4449                      ; input
     177.  00:4449                      ; d = page
     178.  00:4449                      ; e = dx
     179.  00:4449                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     180.  00:4449                      		
     181.  00:4449                      clear_slice:
     182.  00:4449  3E 24               		ld 		a, 36
     183.  00:444B  D3 99               		out 	(0x99),a
     184.  00:444D  3E 91               		ld 		a, 17+128
     185.  00:444F  D3 99               		out 	(0x99),a
     186.  00:4451                      		
     187.  00:4451  0E 9B               		ld 		c, 0x9B
     188.  00:4453                      		
     189.  00:4453                      		; call _waitvdp
     190.  00:4453                      		
     191.  00:4453  ED 59               		out 	(c), e 			; dx
     192.  00:4455  AF                  		xor		a
     193.  00:4456  D3 9B               		out 	(0x9B), a		; dx (high)
     194.  00:4458                      		
     195.  00:4458  D3 9B               		out 	(0x9B), a		; dy
     196.  00:445A                      								; destination page
     197.  00:445A  ED 51               		out 	(c), d			; dy (high-> page 0 or 1)
     198.  00:445C                      		
     199.  00:445C  3E 10               		ld 		a,16
     200.  00:445E  D3 9B               		out 	(0x9B), a			; x block size
     201.  00:4460  AF                  		xor		a
     202.  00:4461  D3 9B               		out 	(0x9B), a
     203.  00:4463                      
     204.  00:4463  3E A0               		ld		a,10*16				; mapHeight*16
     205.  00:4465  D3 9B               		out 	(0x9B), a			; y block size
     206.  00:4467  AF                  		xor a
     207.  00:4468  D3 9B               		out 	(0x9B), a
     208.  00:446A                      
     209.  00:446A  D3 9B               		out 	(0x9B), a			; border_color
     210.  00:446C  D3 9B               		out 	(0x9B), a
     211.  00:446E                      
     212.  00:446E  3E C0               		ld		a,11000000B
     213.  00:4470  D3 9B               		out 	(0x9B), a			; command HMMV
     214.  00:4472  C9                  		ret
      42   00:4473                      		include brdrs_opt.asm
       1.  00:4473                      _brdrs:
       2.  00:4473                      		; ld		a,11100000B
       3.  00:4473                      		; out		(0x99),a
       4.  00:4473                      		; ld		a,7+128
       5.  00:4473                      		; out		(0x99),a
       6.  00:4473                      
       7.  00:4473  CD 92 44            		call	vdp_task
       8.  00:4476                      
       9.  00:4476  3E 1C               		ld		a,00011100B
      10.  00:4478  D3 99               		out		(0x99),a
      11.  00:447A  3E 87               		ld		a,7+128
      12.  00:447C  D3 99               		out		(0x99),a
      13.  00:447E                      
      14.  00:447E  CD B2 44            		call	brdrs
      15.  00:4481                      		
      16.  00:4481  3A 07 CA            		ld		a,(_xoffset)
      17.  00:4484  FE 0F               		cp		15
      18.  00:4486  CC F1 44            		call	z,colmn_patch
      19.  00:4489                      
      20.  00:4489  3E E0               		ld		a,11100000B
      21.  00:448B  D3 99               		out		(0x99),a
      22.  00:448D  3E 87               		ld		a,7+128
      23.  00:448F  D3 99               		out		(0x99),a
      24.  00:4491                      
      25.  00:4491  C9                  		ret
      26.  00:4492                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
      27.  00:4492                      
      28.  00:4492                      vdp_task:
      29.  00:4492  3A 07 CA            		ld		a,(_xoffset)
      30.  00:4495  A7                  		and		a
      31.  00:4496  20 0B               		jr		nz,.x1_15
      32.  00:4498                      .x0:		
      33.  00:4498  3A 06 CA            		ld		a,(_displaypage)
      34.  00:449B  EE 01               		xor		1
      35.  00:449D  57                  		ld		d,a
      36.  00:449E  1E F0               		ld		e,240
      37.  00:44A0  C3 49 44            		jp 		clear_slice
      38.  00:44A3                      
      39.  00:44A3                      .x1_15:
      40.  00:44A3  C6 F0               		add		a,240
      41.  00:44A5  5F                  		ld		e,a
      42.  00:44A6  3D                  		dec		a
      43.  00:44A7  87 87 87 87         [4]		add		a,a
      44.  00:44AB  57                  		ld		d,a
      45.  00:44AC  C6 10               		add		a,16
      46.  00:44AE  47                  		ld		b,a
      47.  00:44AF  C3 0E 44            		jp		move_slice
      48.  00:44B2                      
      49.  00:44B2                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
      50.  00:44B2                      
      51.  00:44B2                      	; hl -> tile column in the map
      52.  00:44B2                      		
      53.  00:44B2                      brdrs:
      54.  00:44B2  3A 07 CA            		ld		a,(_xoffset)
      55.  00:44B5  DD 6F               		ld		ixl,a
      56.  00:44B7  C6 F0               		add		a,240
      57.  00:44B9  5F                  		ld		e,a
      58.  00:44BA                      
      59.  00:44BA  0E 98               		ld	c,0x98
      60.  00:44BC                      				
      61.  00:44BC  3A 06 CA            		ld	a,(_displaypage)
      62.  00:44BF  87 87               [2] 	add a,a
      63.  00:44C1  D3 99               		out (0x99),a 	; set bits 14-16
      64.  00:44C3  3E 8E               		ld a,14+128
      65.  00:44C5  D3 99               		out (0x99),a
      66.  00:44C7                      
      67.  00:44C7  16 40               		ld	d,0x40		; write access
      68.  00:44C9  CD 2A 45            		call plot_col64
      69.  00:44CC                      
      70.  00:44CC  3A 06 CA            		ld	a,(_displaypage)
      71.  00:44CF  87 87               [2] 	add a,a
      72.  00:44D1  F6 01               		or	1
      73.  00:44D3  D3 99               		out (0x99),a 	; set bits 14-16
      74.  00:44D5  3E 8E               		ld a,14+128
      75.  00:44D7  D3 99               		out (0x99),a
      76.  00:44D9                      
      77.  00:44D9  16 40               		ld	d,0x40		; write access	
      78.  00:44DB  CD 2A 45            		call	plot_col64
      79.  00:44DE                      		
      80.  00:44DE  3A 06 CA            		ld	a,(_displaypage)
      81.  00:44E1  87 87               [2] 	add a,a
      82.  00:44E3  F6 02               		or	2
      83.  00:44E5  D3 99               		out (0x99),a 	; set bits 14-16
      84.  00:44E7  3E 8E               		ld a,14+128
      85.  00:44E9  D3 99               		out (0x99),a
      86.  00:44EB                      
      87.  00:44EB  16 40               		ld	d,0x40		; write access	
      88.  00:44ED  CD 2D 45            		call	plot_col32
      89.  00:44F0                      				
      90.  00:44F0  C9                  		ret
      91.  00:44F1                      
      92.  00:44F1                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;		
      93.  00:44F1                      	; small patch on last column
      94.  00:44F1                      	
      95.  00:44F1                      	; hl -> tile column in the map + 10
      96.  00:44F1                      	
      97.  00:44F1                      colmn_patch:
      98.  00:44F1  3E F6               		ld		a,-10		; return to the start of the column
      99.  00:44F3  84                  		add		a,h
     100.  00:44F4  67                  		ld 		h,a
     101.  00:44F5                      		
     102.  00:44F5  7E                  		ld		a,(hl)			; first tile in the column
     103.  00:44F6  07 07 07            [3]		rlca
     104.  00:44F9  E6 07               		and		00000111B
     105.  00:44FB  C6 04               		add		a,:_tiles0
     106.  00:44FD  32 00 B0            		ld		(_kBank4),a
     107.  00:4500  7E                  		ld		a,(hl)
     108.  00:4501  E6 1F               		and		00011111B
     109.  00:4503  C6 A0               		add		a,high _tiles0
     110.  00:4505  67                  		ld		h,a
     111.  00:4506  2E F0               		ld		l,0xF0
     112.  00:4508                      		
     113.  00:4508  3A 06 CA            		ld		a,(_displaypage)
     114.  00:450B  EE 01               		xor		1				; hidden page
     115.  00:450D  87 87               [2] 	add 	a,a
     116.  00:450F  D3 99               		out 	(0x99),a 		; set bits 14-16
     117.  00:4511  3E 8E               		ld 		a,14+128
     118.  00:4513  D3 99               		out 	(0x99),a
     119.  00:4515                      
     120.  00:4515  11 EF 40            		ld		de,0x40EF		; write access, columns 239 on hidden page
     121.  00:4518                      				
     122.  00:4518                      		; hl -> tile column in the tile set
     123.  00:4518                      	
     124.  00:4518  7B                  		ld 		a,e 			;set bits 0-7
     125.  00:4519  D3 99               		out 	(0x99),a
     126.  00:451B  7A                  		ld 		a,d 			;set bits 8-13
     127.  00:451C  D3 99               		out 	(0x99),a
     128.  00:451E  ED A3               		outi	
     129.  00:4520  14                  		inc d
     130.  00:4521  7B                  		ld 		a,e 			;set bits 0-7
     131.  00:4522  D3 99               		out 	(0x99),a
     132.  00:4524  7A                  		ld 		a,d 			;set bits 8-13
     133.  00:4525  D3 99               		out 	(0x99),a
     134.  00:4527  ED A3               		outi	
     135.  00:4529  C9                  		ret
     136.  00:452A                      
     137.  00:452A                      
     138.  00:452A                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     139.  00:452A                      		
     140.  00:452A                      plot_col64:
     141.  00:452A                      	; hl -> tile in the map
     142.  00:452A  CD 2D 45            		call	plot_col32
     143.  00:452D                      plot_col32:		
     144.  00:452D  CD 30 45            		call	plot_col16
     145.  00:4530                      plot_col16:
     146.  00:4530  E5                  		push	hl
     147.  00:4531  CD 37 45            		call	_plot_col16
     148.  00:4534  E1                  		pop		hl
     149.  00:4535  24                  		inc h			; next line in the map 	; inc l for maps stored column-wise
     150.  00:4536  C9                  		ret
     151.  00:4537                      
     152.  00:4537                      
     153.  00:4537                      _plot_col16:
     154.  00:4537  7E                  		ld	a,(hl)
     155.  00:4538  07 07 07            [3]		rlca
     156.  00:453B  E6 07               		and	00000111B
     157.  00:453D  C6 04               		add	a,:_tiles0
     158.  00:453F  32 00 B0            		ld	(_kBank4),a
     159.  00:4542  7E                  		ld	a,(hl)
     160.  00:4543  E6 1F               		and	00011111B
     161.  00:4545  C6 A0               		add	a,high _tiles0
     162.  00:4547  67                  		ld	h,a
     163.  00:4548  3A 07 CA            		ld	a,(_xoffset)
     164.  00:454B  87 87 87 87         [4]		add	a,a
     165.  00:454F  6F                  		ld	l,a
     166.  00:4550                      
     167.  00:4550                      	; hl -> tile column in the tile set
     168.  00:4550                      	
     169.  00:4550                      		repeat 16
     170.  00:4550                    < 		ld a,e 			;set bits 0-7
     171.  00:4550                    < 		out (0x99),a
     172.  00:4550                    < 		ld a,d 			;set bits 8-13
     173.  00:4550                    < 		out (0x99),a
     174.  00:4550                    < 		outi			; 18
     175.  00:4550                    < 		ld	a,ixl 		;set bits 0-7
     176.  00:4550                    < 		out (0x99),a
     177.  00:4550                    < 		ld a,d 			;set bits 8-13
     178.  00:4550                    < 		out (0x99),a
     179.  00:4550                    < 		xor	a
     180.  00:4550                    < 		out	(0x98),a
     181.  00:4550                    < 		inc	d
     182.  00:4550                    < 		endrepeat
     182.  00:4550  7B D3 99 7A D3 99 ED A3 DD 7D D3 99 7A D3 99 AF 
     182.  00:4560  D3 98 14 7B D3 99 7A D3 99 ED A3 DD 7D D3 99 7A 
     182.  00:4570  D3 99 AF D3 98 14 7B D3 99 7A D3 99 ED A3 DD 7D 
     182.  00:4580  D3 99 7A D3 99 AF D3 98 14 7B D3 99 7A D3 99 ED 
     182.  00:4590  A3 DD 7D D3 99 7A D3 99 AF D3 98 14 7B D3 99 7A 
     182.  00:45A0  D3 99 ED A3 DD 7D D3 99 7A D3 99 AF D3 98 14 7B 
     182.  00:45B0  D3 99 7A D3 99 ED A3 DD 7D D3 99 7A D3 99 AF D3 
     182.  00:45C0  98 14 7B D3 99 7A D3 99 ED A3 DD 7D D3 99 7A D3 
     182.  00:45D0  99 AF D3 98 14 7B D3 99 7A D3 99 ED A3 DD 7D D3 
     182.  00:45E0  99 7A D3 99 AF D3 98 14 7B D3 99 7A D3 99 ED A3 
     182.  00:45F0  DD 7D D3 99 7A D3 99 AF D3 98 14 7B D3 99 7A D3 
     182.  00:4600  99 ED A3 DD 7D D3 99 7A D3 99 AF D3 98 14 7B D3 
     182.  00:4610  99 7A D3 99 ED A3 DD 7D D3 99 7A D3 99 AF D3 98 
     182.  00:4620  14 7B D3 99 7A D3 99 ED A3 DD 7D D3 99 7A D3 99 
     182.  00:4630  AF D3 98 14 7B D3 99 7A D3 99 ED A3 DD 7D D3 99 
     182.  00:4640  7A D3 99 AF D3 98 14 7B D3 99 7A D3 99 ED A3 DD 
     182.  00:4650  7D D3 99 7A D3 99 AF D3 98 14 7B D3 99 7A D3 99 
     182.  00:4660  ED A3 DD 7D D3 99 7A D3 99 AF D3 98 14 7B D3 99 
     182.  00:4670  7A D3 99 ED A3 DD 7D D3 99 7A D3 99 AF D3 98 14 
     183.  00:4680  C9                  		ret
     184.  00:4681                      		
      43   00:4681                      		
      44   00:4681                      		include checkkbd.asm
       1.  00:4681                      
       2.  00:4681                      ; // Line Bit_7 Bit_6 Bit_5 Bit_4 Bit_3 Bit_2 Bit_1 Bit_0
       3.  00:4681                      ; // 0 "7" "6" "5" "4" "3" "2" "1" "0"
       4.  00:4681                      ; // 1 ";" "]" "[" "\" "=" "-" "9" "8"
       5.  00:4681                      ; // 2 "B" "A" ??? "/" "." "," "'" "`"
       6.  00:4681                      ; // 3 "J" "I" "H" "G" "F" "E" "D" "C"
       7.  00:4681                      ; // 4 "R" "Q" "P" "O" "N" "M" "L" "K"
       8.  00:4681                      ; // 5 "Z" "Y" "X" "W" "V" "U" "T" "S"
       9.  00:4681                      ; // 6 F3 F2 F1 CODE CAP GRAPH CTRL SHIFT
      10.  00:4681                      ; // 7 RET SEL BS STOP TAB ESC F5 F4
      11.  00:4681                      ; // 8 RIGHT DOWN UP LEFT DEL INS HOME SPACE
      12.  00:4681                      
      13.  00:4681                      checkkbd:
      14.  00:4681  F3                  		di
      15.  00:4682  DB AA               		in	a,(0aah)
      16.  00:4684  E6 F0               		and 011110000B			; upper 4 bits contain info to preserve
      17.  00:4686  B3                  		or	e
      18.  00:4687  D3 AA               		out (0aah),a
      19.  00:4689  DB A9               		in	a,(0a9h)
      20.  00:468B  6F                  		ld	l,a
      21.  00:468C  FB                  		ei
      22.  00:468D  C9                  		ret
      45   00:468E                      		
      46   00:468E                      ;-------------------------------------
      47   00:468E                      ; Entry point
      48   00:468E                      ;-------------------------------------
      49   00:468E                      START:
      50   00:468E  AF                  		xor	a
      51   00:468F  32 02 CA            		ld	(SEL_NTSC),a		; PAL MODE
      52   00:4692  CD 0A 42            		call	set_scr			; set video mode to screen 8
      53   00:4695  F3                  		di
      54   00:4696                      		
      55   00:4696                      ;-------------------------------------
      56   00:4696                      ;   Power-up routine for 32K ROM
      57   00:4696                      ;   set pages and sub slot
      58   00:4696                      ;-------------------------------------
      59   00:4696  CD 10 40                    call    search_slot
      60   00:4699  CD 2F 40                    call    search_slotram	
      61   00:469C  CD 61 40            		call	setrompage2		; ROM in page 1 & 2
      62   00:469F  CD 5B 40            		call	setrampage0		; RAM in page 0 & 3
      63   00:46A2                      
      64   00:46A2                      
      65   00:46A2                      		; activate  the fist 24K of rom
      66   00:46A2  AF                  		xor	a			   
      67   00:46A3  32 00 50            		ld	(_kBank1),a
      68   00:46A6  3C                  		inc	a
      69   00:46A7  32 00 70            		ld	(_kBank2),a
      70   00:46AA  3C                  		inc	a
      71   00:46AB  32 00 90            		ld	(_kBank3),a
      72   00:46AE                      		
      73   00:46AE  CD 78 41            		call	_cls
      74   00:46B1                      		
      75   00:46B1                      		;--- initialise ISR in RAM
      76   00:46B1                      		
      77   00:46B1  F3                  		di
      78   00:46B2                      	
      79   00:46B2  CD 5C 42            		call	_isrinit
      80   00:46B5                      		
      81   00:46B5                      		; copy the level map from ROM to RAM
      82   00:46B5                      		
      83   00:46B5  CD 0A 47            		call	vdptest
      84   00:46B8  CD A5 41            		call	font_cpy
      85   00:46BB  CD F0 46            		call	mapinit
      86   00:46BE                      		
      87   00:46BE                      		
      88   00:46BE  21 00 00            		ld	hl,0
      89   00:46C1  22 9E FC            		ld	(_jiffy),hl		
      90   00:46C4  AF                  		xor	a
      91   00:46C5  32 06 CA            		ld	(_displaypage),a		
      92   00:46C8                      		
      93   00:46C8  FB                  		ei
      94   00:46C9  76                  1:		halt
      95   00:46CA  76                  		halt
      96   00:46CB  3A 07 CA            		ld	a,(_xoffset)		
      97   00:46CE  A7                  		and	a
      98   00:46CF  C2 C9 46            		jp	nz,1b
      99   00:46D2                      		
     100   00:46D2  1E 08               		ld	e,8
     101   00:46D4  CD 81 46            		call	checkkbd
     102   00:46D7  E6 01               		and	1				; space
     103   00:46D9  CC DF 46            		call	z,PAL_ntsc
     104   00:46DC  C3 C9 46            		jp	1b
     105   00:46DF                      		
     106   00:46DF                      PAL_ntsc
     107   00:46DF  F3                  		di
     108   00:46E0  3A E8 FF            		ld		a,(RG9SAV)		
     109   00:46E3  EE 02               		xor		00000010B		; PAL or NTSC 
     110   00:46E5  32 E8 FF            		ld		(RG9SAV),a
     111   00:46E8  D3 99               		out		(0x99),a
     112   00:46EA  3E 89               		ld		a,9+128
     113   00:46EC  D3 99               		out		(0x99),a
     114   00:46EE  FB                  		ei
     115   00:46EF  C9                  		ret
     116   00:46F0                      
     117   00:46F0                      mapinit		
     118   00:46F0  3E 0C               		ld	a, :_level
     119   00:46F2  32 00 B0            		ld	(_kBank4),a
     120   00:46F5  21 00 A0            		ld		hl,_level
     121   00:46F8  11 00 C0            		ld		de,_levelmap
     122   00:46FB  01 00 0A            		ld		bc,mapWidth*mapHeight
     123   00:46FE  ED B0               		ldir
     124   00:4700                      		
     125   00:4700  AF                  		xor		a
     126   00:4701  67                  		ld		h,a
     127   00:4702  6F                  		ld		l,a		
     128   00:4703  32 03 CA            		ld		(_ymappos),a
     129   00:4706  22 04 CA            		ld		(_xmappos),hl
     130   00:4709                      		
     131   00:4709  C9                  		ret
     132   00:470A                      		
     133   00:470A                      vdptest:
     134   00:470A  16 A0               		ld	d,160			; dest y
     135   00:470C  1E 00               		ld	e,0				; dest x
     136   00:470E  0E A0               		ld	c,160			; initial tile
     137   00:4710  06 20               		ld	b,32			; number of tiles
     138   00:4712                      1:		
     139   00:4712  79                  		ld	a,c
     140   00:4713  07 07 07            [3]		rlca
     141   00:4716  E6 07               		and	00000111B
     142   00:4718  C6 04               		add	a,:_tiles0
     143   00:471A  32 00 B0            		ld	(_kBank4),a		; select tile bank
     144   00:471D                      
     145   00:471D  79                  		ld	a,c
     146   00:471E  E6 1F               		and	00011111B
     147   00:4720  C6 A0               		add	a,high _tiles0
     148   00:4722  67                  		ld	h,a				; select offset in the bank
     149   00:4723  2E 00               		ld	l,0
     150   00:4725                      		
     151   00:4725  D5                  		push	de
     152   00:4726  C5                  		push	bc
     153   00:4727  06 01               		ld		b,1				; page
     154   00:4729  CD 7D 43            		call	LMMC_tile
     155   00:472C  C1                  		pop		bc
     156   00:472D  D1                  		pop		de
     157   00:472E                      		
     158   00:472E  0C                  		inc		c
     159   00:472F                      		
     160   00:472F  3E 10               		ld		a,16		; x=x+16
     161   00:4731  83                  		add		a,e
     162   00:4732  5F                  		ld		e,a
     163   00:4733  30 04               		jr		nc,2f
     164   00:4735                      
     165   00:4735  3E 10               		ld		a,16		; y=y+16
     166   00:4737  82                  		add		a,d
     167   00:4738  57                  		ld		d,a
     168   00:4739                      		
     169   00:4739  10 D7               2:		djnz	1b
     170   00:473B  C9                  		ret
     171   00:473C                      		
     172   00:473C                      		
     173   00:473C  (04)                		page 4
     174   04:A000                      _tiles0:
     175   04:A000  (2000)              		incbin "tiles.bin",0x0000,0x2000
     176   04:C000  (05)                		page 5
     177   05:A000  (2000)              		incbin "tiles.bin",0x2000,0x2000
     178   05:C000  (06)                		page 6
     179   06:A000  (2000)              		incbin "tiles.bin",0x4000,0x2000
     180   06:C000  (07)                		page 7
     181   07:A000  (2000)              		incbin "tiles.bin",0x6000,0x2000
     182   07:C000  (08)                		page 8
     183   08:A000  (2000)              		incbin "tiles.bin",0x8000,0x2000
     184   08:C000  (09)                		page 9
     185   09:A000  (2000)              		incbin "tiles.bin",0xA000,0x2000
     186   09:C000  (0A)                		page 10
     187   0A:A000  (2000)              		incbin "tiles.bin",0xC000,0x2000
     188   0A:C000  (0B)                		page 11
     189   0B:A000  (2000)              		incbin "tiles.bin",0xE000,0x2000
     190   0B:C000                      
     191   0B:C000  (0C)                		page 12		
     192   0C:A000                      _level:
     193   0C:A000  (0A00)              		incbin	datamap.bin	
     194   0C:AA00                      		
     195   0C:AA00  (0D)                		page 13		
     196   0D:A000                      fonts:
     197   0D:A000  (2000)              		incbin	fonts.bin,0x0000,0x2000
     198   0D:C000  (0E)                		page 14
     199   0E:A000  (2000)              		incbin 	fonts.bin,0x2000,0x2000
     200   0E:C000  (0F)                		page 15
     201   0F:A000  (2000)              		incbin 	fonts.bin,0x4000,0x2000
     202   0F:C000                      		
     203   0F:C000                      		; call	opening
     204   0F:C000                      		
     205   0F:C000                      
     206   0F:C000                      		; call 	_hw_sprite_init
     207   0F:C000                      
     208   0F:C000                      		; ld		c,0
     209   0F:C000                      		; ld		de,256*(mapHeight*16+3)
     210   0F:C000                      		; call	_vdpsetvramwr
     211   0F:C000                      
     212   0F:C000                      		; ld		de, 256*:_scorebar+1
     213   0F:C000                      		; call	outvram
     214   0F:C000                      		
     215   0F:C000                      		; ld		c,1
     216   0F:C000                      		; ld		de,256*mapHeight*16
     217   0F:C000                      		; call	_vdpsetvramwr
     218   0F:C000                      
     219   0F:C000                      		; ld		de, 256*:_animated+2
     220   0F:C000                      		; call	outvram
     221   0F:C000                      
     222   0F:C000                      	
     223   0F:C000                      		; ; ld	a,:demo_song
     224   0F:C000                      		; ; setpage_a
     225   0F:C000                      		
     226   0F:C000                      		; ; ld	bc,	end_demo_song-musbuff
     227   0F:C000                      		; ; ld	hl,	demo_song
     228   0F:C000                      		; ; ld	de,	musbuff
     229   0F:C000                      		; ; ldir
     230   0F:C000                      			
     231   0F:C000                      		; ; call	replay_init
     232   0F:C000                      		; ; ld		hl,musbuff
     233   0F:C000                      		; ; call	replay_loadsong
     234   0F:C000                      
     235   0F:C000                      
     236   0F:C000                      		; ld		e,0
     237   0F:C000                      		; call	_setpage
     238   0F:C000                      				
     239   0F:C000                      		; ld	a, :_level
     240   0F:C000                      		; ld	(_kBank4),a
     241   0F:C000                      		
     242   0F:C000                      		; ld		hl,_level
     243   0F:C000                      		; ld		de,_levelmap
     244   0F:C000                      		; ld		bc,mapWidth*mapHeight
     245   0F:C000                      		; ldir
     246   0F:C000                      
     247   0F:C000                      
     248   0F:C000                      		; ; call	init_page0
     249   0F:C000                      
     250   0F:C000                      		; ld		a,0
     251   0F:C000                      		; ld		(cur_level),a
     252   0F:C000                      
     253   0F:C000                      		; ei
     254   0F:C000                      
     255   0F:C000                      ; restart:
     256   0F:C000                      		; call	_intreset
     257   0F:C000                      
     258   0F:C000                      		
     259   0F:C000                      
     260   0F:C000                      		; ld		a,1
     261   0F:C000                      		; ld		(_displaypage),a		
     262   0F:C000                      		; call 	_cls0
     263   0F:C000                      		; ld		hl,_levelmap
     264   0F:C000                      		; ld		(_levelmap_pos),hl
     265   0F:C000                      		
     266   0F:C000                      		; xor		a
     267   0F:C000                      		; ld		h,a
     268   0F:C000                      		; ld		l,a
     269   0F:C000                      		; ld		(flip_flop),a
     270   0F:C000                      		; ld		(god_mode),a
     271   0F:C000                      		; ld		(_ymappos),a
     272   0F:C000                      		; ld		(_xmappos),hl
     273   0F:C000                      		
     274   0F:C000                      		; ld		(_nframes),hl
     275   0F:C000                      		; ld		(_mcdx),hl
     276   0F:C000                      		; ld		(_mcframe),a
     277   0F:C000                      		
     278   0F:C000                      		; ld		(_yoffset),a		;  0 tutto su
     279   0F:C000                      		; ld		(_xoffset),a		;  0 tutto su
     280   0F:C000                      								
     281   0F:C000                      		; ld		(aniframe),a
     282   0F:C000                      		; ld		(anispeed),a
     283   0F:C000                      		; ld		(ms_state),a
     284   0F:C000                      		; inc 	a
     285   0F:C000                      		; ld		(old_aniframe),a		; old_aniframe!=aniframe
     286   0F:C000                      	
     287   0F:C000                      		; ld		(dxmap),a		; moving right
     288   0F:C000                      		; ld		(_dxmap),a		; moving right
     289   0F:C000                      
     290   0F:C000                      		; ld		(xmap),hl
     291   0F:C000                      		; ld		(_xmapx4),hl
     292   0F:C000                      		; ld		bc,xship_rel
     293   0F:C000                      		; add 	hl,bc
     294   0F:C000                      		; ld		(xship),hl
     295   0F:C000                      		; ld		a,80
     296   0F:C000                      		; ld		(yship),a
     297   0F:C000                      
     298   0F:C000                      		; call 	npc_init								
     299   0F:C000                      		; call 	load_colors
     300   0F:C000                      
     301   0F:C000                      		; xor	a
     302   0F:C000                      		; ld		(_kBank1),a
     303   0F:C000                      		; inc	a
     304   0F:C000                      		; ld		(_kBank2),a
     305   0F:C000                      		; inc	a
     306   0F:C000                      		; ld		(_kBank3),a
     307   0F:C000                      		
     308   0F:C000                      
     309   0F:C000                      		; call	_isrinit
     310   0F:C000                      
     311   0F:C000                      ; main_loop: 
     312   0F:C000                      				
     313   0F:C000                      		; ld	hl,0
     314   0F:C000                      		; ld	(_jiffy),hl
     315   0F:C000                      
     316   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     317   0F:C000                      ; ; run ms FSM and place its sprites in the SAT in RAM
     318   0F:C000                      		; call	ms_ctrl
     319   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     320   0F:C000                      ; ; test for game restart
     321   0F:C000                      		; ld	a,(ms_state)
     322   0F:C000                      		; cp	ms_reset
     323   0F:C000                      		; jp	z,restart
     324   0F:C000                      
     325   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     326   0F:C000                      ; ; place MS in the SAT and test for collision
     327   0F:C000                      		; call	put_ms_sprt
     328   0F:C000                      		; ld		a,(god_mode)
     329   0F:C000                      		; and 	a
     330   0F:C000                      		; ; call	z,test_obstacles
     331   0F:C000                      
     332   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     333   0F:C000                      ; ; run NCPS FSM
     334   0F:C000                      		; call	wave_timer
     335   0F:C000                      		; call	npc_loop
     336   0F:C000                      		; call	enemy_bullet_loop
     337   0F:C000                      
     338   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     339   0F:C000                      ; ; run MS bullets FSM
     340   0F:C000                      		; call	bullet_loop
     341   0F:C000                      
     342   0F:C000                      		; ; ld	a,00100101B			; random colour
     343   0F:C000                      		; ; out		(0x99),a
     344   0F:C000                      		; ; ld		a,7+128
     345   0F:C000                      		; ; out		(0x99),a
     346   0F:C000                      		
     347   0F:C000                      		; ; call	_waitvdp
     348   0F:C000                      
     349   0F:C000                      		; ; ld	a,10100101B			; random colour
     350   0F:C000                      		; ; out		(0x99),a
     351   0F:C000                      		; ; ld		a,7+128
     352   0F:C000                      		; ; out		(0x99),a
     353   0F:C000                      				
     354   0F:C000                      		; ld	a,(joystick)
     355   0F:C000                      		; and	32
     356   0F:C000                      		; ; call	z,_plot_distrucable
     357   0F:C000                      
     358   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     359   0F:C000                      		; ; ld		a,3
     360   0F:C000                      		; ; out		(0x99),a
     361   0F:C000                      		; ; ld		a,7+128
     362   0F:C000                      		; ; out		(0x99),a
     363   0F:C000                      		
     364   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     365   0F:C000                      		; ; call	test_star
     366   0F:C000                      
     367   0F:C000                      		; ; xor		a
     368   0F:C000                      		; ; out		(0x99),a
     369   0F:C000                      		; ; ld		a,7+128
     370   0F:C000                      		; ; out		(0x99),a
     371   0F:C000                      ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     372   0F:C000                      
     373   0F:C000                      		
     374   0F:C000                      ; 1:		ld	a,(_jiffy)		; wait for vblank (and not for linit)
     375   0F:C000                      		; or	a
     376   0F:C000                      		; jr	z,1b
     377   0F:C000                      	
     378   0F:C000                      		; ld	hl,(xmap)
     379   0F:C000                      		; ld	bc,xship_rel
     380   0F:C000                      		; add hl,bc
     381   0F:C000                      		; ld	(xship),hl
     382   0F:C000                      
     383   0F:C000                      		; ld		a,(dxmap)
     384   0F:C000                      		; ld		(_dxmap),a
     385   0F:C000                      
     386   0F:C000                      		; jp      main_loop
     387   0F:C000                      
     388   0F:C000                      ; ;-------------------------------------
     389   0F:C000                      ; AFXPLAY:
     390   0F:C000                      		; ret
     391   0F:C000                      ; ;	include vuitpakker.asm
     392   0F:C000                      	; include print.asm
     393   0F:C000                      	; include plot_line.asm
     394   0F:C000                      	; include plot_line2.asm
     395   0F:C000                      	; include color_update.asm
     396   0F:C000                      ; ms_bllts_col_win:
     397   0F:C000                      	; include ms_bllts_frm_coll_wind.asm
     398   0F:C000                      	; include	ms_bllts.asm
     399   0F:C000                      		
     400   0F:C000                      ; ;-------------------------------------
     401   0F:C000                      
     402   0F:C000                      	
     403   0F:C000                      		; page 1
     404   0F:C000                      
     405   0F:C000                      		; include	ms_crtl.asm
     406   0F:C000                      		; include	put_ms_sprt.asm
     407   0F:C000                      		; include probe_level.asm				
     408   0F:C000                      		; include opening.asm		
     409   0F:C000                      ; outvram:
     410   0F:C000                      ; 2:		ld	a,d
     411   0F:C000                      		; ld	(_kBank4),a
     412   0F:C000                      		; ld	hl,0xA000
     413   0F:C000                      		; ld	bc,0x98
     414   0F:C000                      		; ld	a,32
     415   0F:C000                      ; 1:		otir
     416   0F:C000                      		; dec	a
     417   0F:C000                      		; jp	nz,1b
     418   0F:C000                      		; inc	d
     419   0F:C000                      		; dec	e
     420   0F:C000                      		; jr	nz,2b
     421   0F:C000                      		; ret
     422   0F:C000                      		
     423   0F:C000                      		; page 2
     424   0F:C000                      	; ; include mainhero_LMMM.asm
     425   0F:C000                      
     426   0F:C000                      	
     427   0F:C000                      		; page 3
     428   0F:C000                      ; manta_color:
     429   0F:C000                      		; incbin mship03_clr.bin
     430   0F:C000                      ; ms_spt:
     431   0F:C000                      		; incbin mship03_frm.bin
     432   0F:C000                      		
     433   0F:C000                      		; page 4
     434   0F:C000                      ; _tiles0:
     435   0F:C000                      		; incbin "tiles.bin",0x0000,0x2000
     436   0F:C000                      		; page 5
     437   0F:C000                      		; incbin "tiles.bin",0x2000,0x2000
     438   0F:C000                      		; page 6
     439   0F:C000                      		; incbin "tiles.bin",0x4000,0x2000
     440   0F:C000                      		; page 7
     441   0F:C000                      		; incbin "tiles.bin",0x6000,0x2000
     442   0F:C000                      		; page 8
     443   0F:C000                      		; incbin "tiles.bin",0x8000,0x2000
     444   0F:C000                      		; page 9
     445   0F:C000                      		; incbin "tiles.bin",0xA000,0x2000
     446   0F:C000                      		; page 10
     447   0F:C000                      		; incbin "tiles.bin",0xC000,0x2000
     448   0F:C000                      		; page 11
     449   0F:C000                      		; incbin "tiles.bin",0xE000;,0x2000
     450   0F:C000                      
     451   0F:C000                      		; page 12
     452   0F:C000                      
     453   0F:C000                      		; page 15
     454   0F:C000                      ; _level:
     455   0F:C000                      		; incbin "datamap.bin"
     456   0F:C000                      	
     457   0F:C000                      		; page 16
     458   0F:C000                      ; _opening:
     459   0F:C000                      		; incbin "opening.bin",0x0000,0x2000
     460   0F:C000                      		; page 17
     461   0F:C000                      		; incbin "opening.bin",0x2000,0x2000
     462   0F:C000                      		; page 18
     463   0F:C000                      		; incbin "opening.bin",0x4000,0x2000
     464   0F:C000                      		; page 19
     465   0F:C000                      		; incbin "opening.bin",0x6000,0x2000
     466   0F:C000                      		; page 20
     467   0F:C000                      		; incbin "opening.bin",0x8000,0x2000
     468   0F:C000                      		; page 21
     469   0F:C000                      		; incbin "opening.bin",0xA000,0x2000
     470   0F:C000                      		; page 22
     471   0F:C000                      		; incbin "opening.bin",0xC000;,0x2000
     472   0F:C000                      		; page 23
     473   0F:C000                      		; ; incbin "opening.bin",0xE000;,,0x2000
     474   0F:C000                      	
     475   0F:C000                      		; page 24
     476   0F:C000                      ; _scorebar:	
     477   0F:C000                      		; incbin scorebar.bin
     478   0F:C000                      	
     479   0F:C000                      		; page 25
     480   0F:C000                      ; _animated:	
     481   0F:C000                      		; incbin animated.bin,0x0000,0x2000
     482   0F:C000                      		; page 26
     483   0F:C000                      		; incbin animated.bin,0x2000,0x2000
     484   0F:C000                      
     485   0F:C000                      		; page 27
     486   0F:C000                      ; sprtdata:
     487   0F:C000                      		; incbin 	uridium_revA.bin,,16*32
     488   0F:C000                      		; incbin 	enemies_frm.bin
     489   0F:C000                      
     490   0F:C000                      		; page 28
     491   0F:C000                      ; color_base:
     492   0F:C000                      		; repeat 4
     493   0F:C000                      		; ds	16,8
     494   0F:C000                      		; ds	16,10+64
     495   0F:C000                      		; endrepeat
     496   0F:C000                      		; repeat 4
     497   0F:C000                      		; ds	16,8
     498   0F:C000                      		; ds	16,10+64
     499   0F:C000                      		; endrepeat
     500   0F:C000                      
     501   0F:C000                      		
     502   0F:C000                      		; incbin 	enemies_clr.bin
     503   0F:C000                      		
     504   0F:C000                      ; FINISH:
     505   0F:C000                      
     506   0F:C000                      
     507   0F:C000                      ; ;---------------------------------------------------------
     508   0F:C000                      ; ; Variables
     509   0F:C000                      ; ;---------------------------------------------------------
     510   0F:C000                      	
     511   0F:C000                      	
     512   0F:C000  (C000)              	MAP 0xC000
     513   0F:C000                      
     514   0F:C000  (0F:C000)           _levelmap:			#mapWidth*mapHeight
     515   0F:C000                      
     516   0F:C000  (0F:CA00)           slotvar				#1
     517   0F:C000  (0F:CA01)           slotram				#1
     518   0F:C000  (0F:CA02)           SEL_NTSC			#1
     519   0F:C000                      
     520   0F:C000                      ; joystick			#1
     521   0F:C000                      
     522   0F:C000                      ; _mcdivider			#1
     523   0F:C000                      
     524   0F:C000                      ; _mcx				#2	; relative with in the frame on the screen
     525   0F:C000                      ; _mcy				#2
     526   0F:C000                      
     527   0F:C000                      ; _mclx				#2	; absolute with the level in ram
     528   0F:C000                      ; _mcly				#2
     529   0F:C000                      
     530   0F:C000                      ; _mcframe			#1
     531   0F:C000                      ; _mcstate			#1
     532   0F:C000                      
     533   0F:C000                      ; _mcdx				#2
     534   0F:C000                      ; _mcdy				#2
     535   0F:C000                      
     536   0F:C000                      ; _mcprobe:			#1
     537   0F:C000                      ; _mcprobeb:			#1
     538   0F:C000                      
     539   0F:C000                      ; _ticxframe			#1
     540   0F:C000                      
     541   0F:C000                      ; _buffer:			#16
     542   0F:C000                      ; _fps:				#2
     543   0F:C000                      ; _nframes:			#2
     544   0F:C000                      ; _vbit16:			#2
     545   0F:C000                      
     546   0F:C000  (0F:CA03)           _ymappos:			#1
     547   0F:C000  (0F:CA04)           _xmappos:			#2
     548   0F:C000                      
     549   0F:C000                      ; _shadowbuff:		#2
     550   0F:C000                      
     551   0F:C000  (0F:CA06)           _displaypage:		#1
     552   0F:C000                      
     553   0F:C000                      ; _mccolorchange:		#1
     554   0F:C000  (0F:CA07)           _xoffset:			#1
     555   0F:C000                      ; _yoffset:			#1
     556   0F:C000                      
     557   0F:C000                      ; __xoffset:			#1
     558   0F:C000                      ; __r18:				#1
     559   0F:C000                      
     560   0F:C000                      ; randSeed:			#2
     561   0F:C000                      ; cur_level:			#1
     562   0F:C000                      ; wave_count:			#1
     563   0F:C000                      ; landing_permission:	#1
     564   0F:C000                      ; assault_wave_timer:	#2
     565   0F:C000                      ; bullet_rate:		#1
     566   0F:C000                      ; _dxchng:			#1		; <>0 if direction changes
     567   0F:C000                      ; _dxmap:				#1		; previous dxmap
     568   0F:C000                      ; dxmap:				#1
     569   0F:C000                      ; xmap:				#2
     570   0F:C000                      ; _xmapx4:			#2		; xmap x 4
     571   0F:C000                      ; yship:				#1
     572   0F:C000                      ; xship:				#2
     573   0F:C000                      ; aniframe:			#1
     574   0F:C000                      ; ms_state:			#1
     575   0F:C000                      ; old_aniframe:		#1
     576   0F:C000                      ; anispeed:			#1
     577   0F:C000                      ; already_dead:		#1
     578   0F:C000                      ; lives_bin:			#1
     579   0F:C000                      
     580   0F:C000                      ; god_mode:			#1
     581   0F:C000                      ; visible_sprts:		#1
     582   0F:C000                      ; flip_flop:			#1
     583   0F:C000                      
     584   0F:C000                      ; ram_sat:			#3*4
     585   0F:C000                      
     586   0F:C000                      	; struct enemy_data
     587   0F:C000                      ; y				db	0
     588   0F:C000                      ; x				dw	0
     589   0F:C000                      ; xoff			db	0
     590   0F:C000                      ; yoff			db	0
     591   0F:C000                      ; xsize			db	0
     592   0F:C000                      ; ysize			db	0
     593   0F:C000                      ; status			db	0	; B7 = DWN/UP | B6 = RIGHT/LEFT | B5 = ok/wrong clr | B0 = Inactive/Active
     594   0F:C000                      ; cntr			db	0
     595   0F:C000                      ; kind			db	0
     596   0F:C000                      ; frame			db	0
     597   0F:C000                      ; color			db	0
     598   0F:C000                      ; color2			db	0
     599   0F:C000                      ; speed			dw	0
     600   0F:C000                      	; ends
     601   0F:C000                      	
     602   0F:C000                      ; any_object:			#0
     603   0F:C000                      ; ms_bullets:			#enemy_data*max_bullets
     604   0F:C000                      ; enem_bullets:		#enemy_data*max_enem_bullets
     605   0F:C000                      ; enemies:			#enemy_data*max_enem
     606   0F:C000                      ; endram:				#1
     607   0F:C000  (0000)              	ENDMAP

    LABELS
-------------------------------------------------
00:00005000   _kBank1
00:00007000   _kBank2
00:00009000   _kBank3
00:0000B000   _kBank4
00:0000F3DF   RG0SAV
00:0000F3E0   RG1SAV
00:0000F3E1 X RG2SAV
00:0000F3E2 X RG3SAV
00:0000F3E3 X RG4SAV
00:0000F3E4 X RG5SAV
00:0000F3E5 X RG6SAV
00:0000F3E6   RG7SAV
00:0000FFE7   RG8SAV
00:0000FFE8   RG9SAV
00:0000FFE9 X RG10SAV
00:0000FFEA X RG11SAV
00:0000FFEB X RG12SAV
00:0000FFEC X RG13SAV
00:0000FFED X RG14SAV
00:0000FFEE X RG15SAV
00:0000FFEF X RG16SAV
00:0000FFF0 X RG17SAV
00:0000FFF1 X RG18SAV
00:0000FFF2 X RG19SAV
00:0000FFF3 X RG20SAV
00:0000FFF4 X RG21SAV
00:0000FFF5 X RG22SAV
00:0000FFF7 X RG23SAV
00:0000FC9E   _jiffy
00:0000000C X max_enem
00:00000003 X max_enem_bullets
00:00000002 X max_bullets
00:00000004 X maxspeed
00:000000B4 X assault_wave_timer_preset
00:00000002 X enemy_bullet_speed
00:00000078 X xship_rel
00:00000100   mapWidth
00:0000000A   mapHeight
00:000000A0   YSIZE
00:00000024 X ENASLT
00:00000138   RSLREG
00:0000FCC1   EXPTBL
00:00004010   search_slot
00:0000402F   search_slotram
00:00004050   search_slotram0
00:00004055 X setrompage0
00:0000405B   setrampage0
00:00004061   setrompage2
00:00004067 X setrampage2
00:0000406D X setrompage3
00:00004073 X setrampage3
00:00004079 X recbios
00:0000407C   setslotpage0
00:000040B3 X setslotpage1
00:000040F2   setslotpage2
00:00004139   setslotpage3
00:00004178   _cls
00:00004190 X _cls0
00:000041A5   font_cpy
00:00000099 X vdpport1
00:0000009A X vdpport2
00:000041C5   _vdpsetvramwr
00:000041C6 X _vdpsetvramwr2
00:000041D6 X _vdpsetvramwr14
00:000041DF X _vdpsetvramrd
00:000041F9 X _setpage
00:0000005F   chgmod
00:0000000C X RDSLT
00:00000156 X KILBUF
00:0000420A   set_scr
00:0000424D   _waitvdp
00:0000425C   _isrinit
00:0000427E   vblank
00:000042DC   lint
00:00004335   _scroll
00:00004354   xscroll
00:00004362   pageswap
00:0000437D   LMMC_tile
00:000043C4   animtest
00:000043CB X move_tile
00:0000440E   move_slice
00:00004449   clear_slice
00:00004473   _brdrs
00:00004492   vdp_task
00:00004498 X vdp_task.x0
00:000044A3   vdp_task.x1_15
00:000044B2   brdrs
00:000044F1   colmn_patch
00:0000452A   plot_col64
00:0000452D   plot_col32
00:00004530   plot_col16
00:00004537   _plot_col16
00:00004681   checkkbd
00:0000468E   START
00:000046DF   PAL_ntsc
00:000046F0   mapinit
00:0000470A   vdptest
04:0000A000   _tiles0
0C:0000A000   _level
0D:0000A000   fonts
0F:0000C000   _levelmap
0F:0000CA00   slotvar
0F:0000CA01   slotram
0F:0000CA02   SEL_NTSC
0F:0000CA03   _ymappos
0F:0000CA04   _xmappos
0F:0000CA06   _displaypage
0F:0000CA07   _xoffset


 Output: main.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: urd2.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00002000  Used: 0000073C

   Address   Length Align   Label
   00004000    1852         search_slot
   0000473C    6340       <empty>

 Page: 01
  Org: 00006000  Size: 00002000  Used: 00000000

   00006000    8192       <empty>

 Page: 02
  Org: 00008000  Size: 00002000  Used: 00000000

   00008000    8192       <empty>

 Page: 03
  Org: 0000A000  Size: 00002000  Used: 00000000

   0000A000    8192       <empty>

 Page: 04
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         _tiles0

 Page: 05
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 06
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 07
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 08
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 09
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 0A
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 0B
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 0C
  Org: 0000A000  Size: 00002000  Used: 00000A00

   Address   Length Align   Label
   0000A000    2560         _level
   0000AA00    5632       <empty>

 Page: 0D
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         fonts

 Page: 0E
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         

 Page: 0F
  Org: 0000A000  Size: 00002000  Used: 00002000

   Address   Length Align   Label
   0000A000    8192         
